
Lab 4.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000004fc  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000690  08000698  00010698  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000690  08000690  00010698  2**0
                  CONTENTS
  4 .ARM          00000000  08000690  08000690  00010698  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000690  08000698  00010698  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000690  08000690  00010690  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000694  08000694  00010694  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010698  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000698  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000698  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010698  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000bf4  00000000  00000000  000106c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000365  00000000  00000000  000112bc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000a8  00000000  00000000  00011628  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000070  00000000  00000000  000116d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000de7f  00000000  00000000  00011740  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001060  00000000  00000000  0001f5bf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0004fc7f  00000000  00000000  0002061f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0007029e  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000164  00000000  00000000  000702f4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000678 	.word	0x08000678

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	08000678 	.word	0x08000678

080001d4 <delay>:
#include "GPIO.h"
#include "stm32f401xc.h"
#include "stm32f401cc_interface.h"

void delay(int sec){
 80001d4:	b480      	push	{r7}
 80001d6:	b085      	sub	sp, #20
 80001d8:	af00      	add	r7, sp, #0
 80001da:	6078      	str	r0, [r7, #4]
	for (int i=0 ; i<sec ; i++){}
 80001dc:	2300      	movs	r3, #0
 80001de:	60fb      	str	r3, [r7, #12]
 80001e0:	e002      	b.n	80001e8 <delay+0x14>
 80001e2:	68fb      	ldr	r3, [r7, #12]
 80001e4:	3301      	adds	r3, #1
 80001e6:	60fb      	str	r3, [r7, #12]
 80001e8:	68fa      	ldr	r2, [r7, #12]
 80001ea:	687b      	ldr	r3, [r7, #4]
 80001ec:	429a      	cmp	r2, r3
 80001ee:	dbf8      	blt.n	80001e2 <delay+0xe>
}
 80001f0:	bf00      	nop
 80001f2:	bf00      	nop
 80001f4:	3714      	adds	r7, #20
 80001f6:	46bd      	mov	sp, r7
 80001f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001fc:	4770      	bx	lr

080001fe <main>:
int main(void) {
 80001fe:	b580      	push	{r7, lr}
 8000200:	b082      	sub	sp, #8
 8000202:	af00      	add	r7, sp, #0
	unsigned int color=0 ;
 8000204:	2300      	movs	r3, #0
 8000206:	607b      	str	r3, [r7, #4]
	unsigned int button=0 ;
 8000208:	2300      	movs	r3, #0
 800020a:	603b      	str	r3, [r7, #0]
	GPIO_Init('B', 3 , INPUT, PUSH_PULL);
 800020c:	2300      	movs	r3, #0
 800020e:	2200      	movs	r2, #0
 8000210:	2103      	movs	r1, #3
 8000212:	2042      	movs	r0, #66	; 0x42
 8000214:	f000 f88a 	bl	800032c <GPIO_Init>
	GPIO_Init('B', 5 , OUTPUT, PUSH_PULL);
 8000218:	2300      	movs	r3, #0
 800021a:	2201      	movs	r2, #1
 800021c:	2105      	movs	r1, #5
 800021e:	2042      	movs	r0, #66	; 0x42
 8000220:	f000 f884 	bl	800032c <GPIO_Init>
	GPIO_Init('B', 6 , OUTPUT, PUSH_PULL);
 8000224:	2300      	movs	r3, #0
 8000226:	2201      	movs	r2, #1
 8000228:	2106      	movs	r1, #6
 800022a:	2042      	movs	r0, #66	; 0x42
 800022c:	f000 f87e 	bl	800032c <GPIO_Init>
	GPIO_Init('B', 7 , OUTPUT, PUSH_PULL);
 8000230:	2300      	movs	r3, #0
 8000232:	2201      	movs	r2, #1
 8000234:	2107      	movs	r1, #7
 8000236:	2042      	movs	r0, #66	; 0x42
 8000238:	f000 f878 	bl	800032c <GPIO_Init>

  while (1) {

	  button = GPIO_ReadPin('B' , 3 );
 800023c:	2103      	movs	r1, #3
 800023e:	2042      	movs	r0, #66	; 0x42
 8000240:	f000 f9c8 	bl	80005d4 <GPIO_ReadPin>
 8000244:	4603      	mov	r3, r0
 8000246:	603b      	str	r3, [r7, #0]
	  delay(10000);
 8000248:	f242 7010 	movw	r0, #10000	; 0x2710
 800024c:	f7ff ffc2 	bl	80001d4 <delay>
	  button=GPIO_ReadPin('B' , 3 );
 8000250:	2103      	movs	r1, #3
 8000252:	2042      	movs	r0, #66	; 0x42
 8000254:	f000 f9be 	bl	80005d4 <GPIO_ReadPin>
 8000258:	4603      	mov	r3, r0
 800025a:	603b      	str	r3, [r7, #0]
	  if(button == 0){
 800025c:	683b      	ldr	r3, [r7, #0]
 800025e:	2b00      	cmp	r3, #0
 8000260:	d123      	bne.n	80002aa <main+0xac>
		  color++;
 8000262:	687b      	ldr	r3, [r7, #4]
 8000264:	3301      	adds	r3, #1
 8000266:	607b      	str	r3, [r7, #4]
		  GPIO_WritePin('B', 5, color&1);
 8000268:	687b      	ldr	r3, [r7, #4]
 800026a:	f003 0301 	and.w	r3, r3, #1
 800026e:	461a      	mov	r2, r3
 8000270:	2105      	movs	r1, #5
 8000272:	2042      	movs	r0, #66	; 0x42
 8000274:	f000 f93c 	bl	80004f0 <GPIO_WritePin>
		  GPIO_WritePin('B', 6, (color>>1)&1);
 8000278:	687b      	ldr	r3, [r7, #4]
 800027a:	085b      	lsrs	r3, r3, #1
 800027c:	f003 0301 	and.w	r3, r3, #1
 8000280:	461a      	mov	r2, r3
 8000282:	2106      	movs	r1, #6
 8000284:	2042      	movs	r0, #66	; 0x42
 8000286:	f000 f933 	bl	80004f0 <GPIO_WritePin>
		  GPIO_WritePin('B', 7, (color>>2)&1);
 800028a:	687b      	ldr	r3, [r7, #4]
 800028c:	089b      	lsrs	r3, r3, #2
 800028e:	f003 0301 	and.w	r3, r3, #1
 8000292:	461a      	mov	r2, r3
 8000294:	2107      	movs	r1, #7
 8000296:	2042      	movs	r0, #66	; 0x42
 8000298:	f000 f92a 	bl	80004f0 <GPIO_WritePin>
	  }
	 while(button == 0){
 800029c:	e005      	b.n	80002aa <main+0xac>
		  button=GPIO_ReadPin('B' ,3 );
 800029e:	2103      	movs	r1, #3
 80002a0:	2042      	movs	r0, #66	; 0x42
 80002a2:	f000 f997 	bl	80005d4 <GPIO_ReadPin>
 80002a6:	4603      	mov	r3, r0
 80002a8:	603b      	str	r3, [r7, #0]
	 while(button == 0){
 80002aa:	683b      	ldr	r3, [r7, #0]
 80002ac:	2b00      	cmp	r3, #0
 80002ae:	d0f6      	beq.n	800029e <main+0xa0>
  while (1) {
 80002b0:	e7c4      	b.n	800023c <main+0x3e>
	...

080002b4 <SystemInit>:
 80002b4:	b480      	push	{r7}
 80002b6:	af00      	add	r7, sp, #0
 80002b8:	4b06      	ldr	r3, [pc, #24]	; (80002d4 <SystemInit+0x20>)
 80002ba:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80002be:	4a05      	ldr	r2, [pc, #20]	; (80002d4 <SystemInit+0x20>)
 80002c0:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80002c4:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 80002c8:	bf00      	nop
 80002ca:	46bd      	mov	sp, r7
 80002cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002d0:	4770      	bx	lr
 80002d2:	bf00      	nop
 80002d4:	e000ed00 	.word	0xe000ed00

080002d8 <Reset_Handler>:
 80002d8:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000310 <LoopFillZerobss+0x12>
 80002dc:	480d      	ldr	r0, [pc, #52]	; (8000314 <LoopFillZerobss+0x16>)
 80002de:	490e      	ldr	r1, [pc, #56]	; (8000318 <LoopFillZerobss+0x1a>)
 80002e0:	4a0e      	ldr	r2, [pc, #56]	; (800031c <LoopFillZerobss+0x1e>)
 80002e2:	2300      	movs	r3, #0
 80002e4:	e002      	b.n	80002ec <LoopCopyDataInit>

080002e6 <CopyDataInit>:
 80002e6:	58d4      	ldr	r4, [r2, r3]
 80002e8:	50c4      	str	r4, [r0, r3]
 80002ea:	3304      	adds	r3, #4

080002ec <LoopCopyDataInit>:
 80002ec:	18c4      	adds	r4, r0, r3
 80002ee:	428c      	cmp	r4, r1
 80002f0:	d3f9      	bcc.n	80002e6 <CopyDataInit>
 80002f2:	4a0b      	ldr	r2, [pc, #44]	; (8000320 <LoopFillZerobss+0x22>)
 80002f4:	4c0b      	ldr	r4, [pc, #44]	; (8000324 <LoopFillZerobss+0x26>)
 80002f6:	2300      	movs	r3, #0
 80002f8:	e001      	b.n	80002fe <LoopFillZerobss>

080002fa <FillZerobss>:
 80002fa:	6013      	str	r3, [r2, #0]
 80002fc:	3204      	adds	r2, #4

080002fe <LoopFillZerobss>:
 80002fe:	42a2      	cmp	r2, r4
 8000300:	d3fb      	bcc.n	80002fa <FillZerobss>
 8000302:	f7ff ffd7 	bl	80002b4 <SystemInit>
 8000306:	f000 f993 	bl	8000630 <__libc_init_array>
 800030a:	f7ff ff78 	bl	80001fe <main>
 800030e:	4770      	bx	lr
 8000310:	20010000 	.word	0x20010000
 8000314:	20000000 	.word	0x20000000
 8000318:	20000000 	.word	0x20000000
 800031c:	08000698 	.word	0x08000698
 8000320:	20000000 	.word	0x20000000
 8000324:	2000001c 	.word	0x2000001c

08000328 <ADC_IRQHandler>:
 8000328:	e7fe      	b.n	8000328 <ADC_IRQHandler>
	...

0800032c <GPIO_Init>:
 */
#include "GPIO.h"
#include "stm32f401xc.h"
#include "stm32f401cc_interface.h"
void GPIO_Init( char Port, unsigned int PIN_NO, unsigned int PIN_Dir, unsigned int Default_State)
{
 800032c:	b480      	push	{r7}
 800032e:	b085      	sub	sp, #20
 8000330:	af00      	add	r7, sp, #0
 8000332:	60b9      	str	r1, [r7, #8]
 8000334:	607a      	str	r2, [r7, #4]
 8000336:	603b      	str	r3, [r7, #0]
 8000338:	4603      	mov	r3, r0
 800033a:	73fb      	strb	r3, [r7, #15]
	//enable clock of port
	switch (Port)
 800033c:	7bfb      	ldrb	r3, [r7, #15]
 800033e:	2b41      	cmp	r3, #65	; 0x41
 8000340:	d002      	beq.n	8000348 <GPIO_Init+0x1c>
 8000342:	2b42      	cmp	r3, #66	; 0x42
 8000344:	d064      	beq.n	8000410 <GPIO_Init+0xe4>
					break;
				}//end switch
		break;
	}

}
 8000346:	e0c7      	b.n	80004d8 <GPIO_Init+0x1ac>
				RCC_AHB1ENR |= (0x01 <<0);
 8000348:	4b66      	ldr	r3, [pc, #408]	; (80004e4 <GPIO_Init+0x1b8>)
 800034a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800034c:	4a65      	ldr	r2, [pc, #404]	; (80004e4 <GPIO_Init+0x1b8>)
 800034e:	f043 0301 	orr.w	r3, r3, #1
 8000352:	6313      	str	r3, [r2, #48]	; 0x30
 8000354:	687b      	ldr	r3, [r7, #4]
 8000356:	2b03      	cmp	r3, #3
 8000358:	d83b      	bhi.n	80003d2 <GPIO_Init+0xa6>
 800035a:	a201      	add	r2, pc, #4	; (adr r2, 8000360 <GPIO_Init+0x34>)
 800035c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000360:	08000371 	.word	0x08000371
 8000364:	0800038b 	.word	0x0800038b
 8000368:	080003a3 	.word	0x080003a3
 800036c:	080003bb 	.word	0x080003bb
							GPIOA_MODER &= ~(0x03 << 2*PIN_NO);
 8000370:	4b5d      	ldr	r3, [pc, #372]	; (80004e8 <GPIO_Init+0x1bc>)
 8000372:	681b      	ldr	r3, [r3, #0]
 8000374:	68ba      	ldr	r2, [r7, #8]
 8000376:	0052      	lsls	r2, r2, #1
 8000378:	2103      	movs	r1, #3
 800037a:	fa01 f202 	lsl.w	r2, r1, r2
 800037e:	43d2      	mvns	r2, r2
 8000380:	4611      	mov	r1, r2
 8000382:	4a59      	ldr	r2, [pc, #356]	; (80004e8 <GPIO_Init+0x1bc>)
 8000384:	400b      	ands	r3, r1
 8000386:	6013      	str	r3, [r2, #0]
					break;
 8000388:	e023      	b.n	80003d2 <GPIO_Init+0xa6>
							GPIOA_MODER |= (0x01 << 2*PIN_NO);
 800038a:	4b57      	ldr	r3, [pc, #348]	; (80004e8 <GPIO_Init+0x1bc>)
 800038c:	681b      	ldr	r3, [r3, #0]
 800038e:	68ba      	ldr	r2, [r7, #8]
 8000390:	0052      	lsls	r2, r2, #1
 8000392:	2101      	movs	r1, #1
 8000394:	fa01 f202 	lsl.w	r2, r1, r2
 8000398:	4611      	mov	r1, r2
 800039a:	4a53      	ldr	r2, [pc, #332]	; (80004e8 <GPIO_Init+0x1bc>)
 800039c:	430b      	orrs	r3, r1
 800039e:	6013      	str	r3, [r2, #0]
					break;
 80003a0:	e017      	b.n	80003d2 <GPIO_Init+0xa6>
							GPIOA_MODER |= (0x02 << 2*PIN_NO);
 80003a2:	4b51      	ldr	r3, [pc, #324]	; (80004e8 <GPIO_Init+0x1bc>)
 80003a4:	681b      	ldr	r3, [r3, #0]
 80003a6:	68ba      	ldr	r2, [r7, #8]
 80003a8:	0052      	lsls	r2, r2, #1
 80003aa:	2102      	movs	r1, #2
 80003ac:	fa01 f202 	lsl.w	r2, r1, r2
 80003b0:	4611      	mov	r1, r2
 80003b2:	4a4d      	ldr	r2, [pc, #308]	; (80004e8 <GPIO_Init+0x1bc>)
 80003b4:	430b      	orrs	r3, r1
 80003b6:	6013      	str	r3, [r2, #0]
					break;
 80003b8:	e00b      	b.n	80003d2 <GPIO_Init+0xa6>
							GPIOA_MODER |= (0x03 << 2*PIN_NO);
 80003ba:	4b4b      	ldr	r3, [pc, #300]	; (80004e8 <GPIO_Init+0x1bc>)
 80003bc:	681b      	ldr	r3, [r3, #0]
 80003be:	68ba      	ldr	r2, [r7, #8]
 80003c0:	0052      	lsls	r2, r2, #1
 80003c2:	2103      	movs	r1, #3
 80003c4:	fa01 f202 	lsl.w	r2, r1, r2
 80003c8:	4611      	mov	r1, r2
 80003ca:	4a47      	ldr	r2, [pc, #284]	; (80004e8 <GPIO_Init+0x1bc>)
 80003cc:	430b      	orrs	r3, r1
 80003ce:	6013      	str	r3, [r2, #0]
					break;
 80003d0:	bf00      	nop
 80003d2:	683b      	ldr	r3, [r7, #0]
 80003d4:	2b00      	cmp	r3, #0
 80003d6:	d003      	beq.n	80003e0 <GPIO_Init+0xb4>
 80003d8:	683b      	ldr	r3, [r7, #0]
 80003da:	2b01      	cmp	r3, #1
 80003dc:	d00c      	beq.n	80003f8 <GPIO_Init+0xcc>
		break;
 80003de:	e07b      	b.n	80004d8 <GPIO_Init+0x1ac>
							GPIOA_OTYPER &= ~(0x01<<PIN_NO);
 80003e0:	4b41      	ldr	r3, [pc, #260]	; (80004e8 <GPIO_Init+0x1bc>)
 80003e2:	685b      	ldr	r3, [r3, #4]
 80003e4:	2101      	movs	r1, #1
 80003e6:	68ba      	ldr	r2, [r7, #8]
 80003e8:	fa01 f202 	lsl.w	r2, r1, r2
 80003ec:	43d2      	mvns	r2, r2
 80003ee:	4611      	mov	r1, r2
 80003f0:	4a3d      	ldr	r2, [pc, #244]	; (80004e8 <GPIO_Init+0x1bc>)
 80003f2:	400b      	ands	r3, r1
 80003f4:	6053      	str	r3, [r2, #4]
					break;
 80003f6:	e00a      	b.n	800040e <GPIO_Init+0xe2>
							GPIOA_OTYPER |= (0x01<<PIN_NO);
 80003f8:	4b3b      	ldr	r3, [pc, #236]	; (80004e8 <GPIO_Init+0x1bc>)
 80003fa:	685b      	ldr	r3, [r3, #4]
 80003fc:	2101      	movs	r1, #1
 80003fe:	68ba      	ldr	r2, [r7, #8]
 8000400:	fa01 f202 	lsl.w	r2, r1, r2
 8000404:	4611      	mov	r1, r2
 8000406:	4a38      	ldr	r2, [pc, #224]	; (80004e8 <GPIO_Init+0x1bc>)
 8000408:	430b      	orrs	r3, r1
 800040a:	6053      	str	r3, [r2, #4]
					break;
 800040c:	bf00      	nop
		break;
 800040e:	e063      	b.n	80004d8 <GPIO_Init+0x1ac>
				RCC_AHB1ENR |= (0x01 <<1);
 8000410:	4b34      	ldr	r3, [pc, #208]	; (80004e4 <GPIO_Init+0x1b8>)
 8000412:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000414:	4a33      	ldr	r2, [pc, #204]	; (80004e4 <GPIO_Init+0x1b8>)
 8000416:	f043 0302 	orr.w	r3, r3, #2
 800041a:	6313      	str	r3, [r2, #48]	; 0x30
 800041c:	687b      	ldr	r3, [r7, #4]
 800041e:	2b03      	cmp	r3, #3
 8000420:	d83b      	bhi.n	800049a <GPIO_Init+0x16e>
 8000422:	a201      	add	r2, pc, #4	; (adr r2, 8000428 <GPIO_Init+0xfc>)
 8000424:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000428:	08000439 	.word	0x08000439
 800042c:	08000453 	.word	0x08000453
 8000430:	0800046b 	.word	0x0800046b
 8000434:	08000483 	.word	0x08000483
							GPIOB_MODER &= ~(0x03 << 2*PIN_NO);
 8000438:	4b2c      	ldr	r3, [pc, #176]	; (80004ec <GPIO_Init+0x1c0>)
 800043a:	681b      	ldr	r3, [r3, #0]
 800043c:	68ba      	ldr	r2, [r7, #8]
 800043e:	0052      	lsls	r2, r2, #1
 8000440:	2103      	movs	r1, #3
 8000442:	fa01 f202 	lsl.w	r2, r1, r2
 8000446:	43d2      	mvns	r2, r2
 8000448:	4611      	mov	r1, r2
 800044a:	4a28      	ldr	r2, [pc, #160]	; (80004ec <GPIO_Init+0x1c0>)
 800044c:	400b      	ands	r3, r1
 800044e:	6013      	str	r3, [r2, #0]
					break;
 8000450:	e023      	b.n	800049a <GPIO_Init+0x16e>
							GPIOB_MODER |= (0x01 << 2*PIN_NO);
 8000452:	4b26      	ldr	r3, [pc, #152]	; (80004ec <GPIO_Init+0x1c0>)
 8000454:	681b      	ldr	r3, [r3, #0]
 8000456:	68ba      	ldr	r2, [r7, #8]
 8000458:	0052      	lsls	r2, r2, #1
 800045a:	2101      	movs	r1, #1
 800045c:	fa01 f202 	lsl.w	r2, r1, r2
 8000460:	4611      	mov	r1, r2
 8000462:	4a22      	ldr	r2, [pc, #136]	; (80004ec <GPIO_Init+0x1c0>)
 8000464:	430b      	orrs	r3, r1
 8000466:	6013      	str	r3, [r2, #0]
					break;
 8000468:	e017      	b.n	800049a <GPIO_Init+0x16e>
							GPIOB_MODER |= (0x02 << 2*PIN_NO);
 800046a:	4b20      	ldr	r3, [pc, #128]	; (80004ec <GPIO_Init+0x1c0>)
 800046c:	681b      	ldr	r3, [r3, #0]
 800046e:	68ba      	ldr	r2, [r7, #8]
 8000470:	0052      	lsls	r2, r2, #1
 8000472:	2102      	movs	r1, #2
 8000474:	fa01 f202 	lsl.w	r2, r1, r2
 8000478:	4611      	mov	r1, r2
 800047a:	4a1c      	ldr	r2, [pc, #112]	; (80004ec <GPIO_Init+0x1c0>)
 800047c:	430b      	orrs	r3, r1
 800047e:	6013      	str	r3, [r2, #0]
					break;
 8000480:	e00b      	b.n	800049a <GPIO_Init+0x16e>
							GPIOB_MODER |= (0x03 << 2*PIN_NO);
 8000482:	4b1a      	ldr	r3, [pc, #104]	; (80004ec <GPIO_Init+0x1c0>)
 8000484:	681b      	ldr	r3, [r3, #0]
 8000486:	68ba      	ldr	r2, [r7, #8]
 8000488:	0052      	lsls	r2, r2, #1
 800048a:	2103      	movs	r1, #3
 800048c:	fa01 f202 	lsl.w	r2, r1, r2
 8000490:	4611      	mov	r1, r2
 8000492:	4a16      	ldr	r2, [pc, #88]	; (80004ec <GPIO_Init+0x1c0>)
 8000494:	430b      	orrs	r3, r1
 8000496:	6013      	str	r3, [r2, #0]
					break;
 8000498:	bf00      	nop
 800049a:	683b      	ldr	r3, [r7, #0]
 800049c:	2b00      	cmp	r3, #0
 800049e:	d003      	beq.n	80004a8 <GPIO_Init+0x17c>
 80004a0:	683b      	ldr	r3, [r7, #0]
 80004a2:	2b01      	cmp	r3, #1
 80004a4:	d00c      	beq.n	80004c0 <GPIO_Init+0x194>
		break;
 80004a6:	e016      	b.n	80004d6 <GPIO_Init+0x1aa>
							GPIOB_OTYPER &= ~(0x01<<PIN_NO);
 80004a8:	4b10      	ldr	r3, [pc, #64]	; (80004ec <GPIO_Init+0x1c0>)
 80004aa:	685b      	ldr	r3, [r3, #4]
 80004ac:	2101      	movs	r1, #1
 80004ae:	68ba      	ldr	r2, [r7, #8]
 80004b0:	fa01 f202 	lsl.w	r2, r1, r2
 80004b4:	43d2      	mvns	r2, r2
 80004b6:	4611      	mov	r1, r2
 80004b8:	4a0c      	ldr	r2, [pc, #48]	; (80004ec <GPIO_Init+0x1c0>)
 80004ba:	400b      	ands	r3, r1
 80004bc:	6053      	str	r3, [r2, #4]
					break;
 80004be:	e00a      	b.n	80004d6 <GPIO_Init+0x1aa>
							GPIOB_OTYPER |= (0x01<<PIN_NO);
 80004c0:	4b0a      	ldr	r3, [pc, #40]	; (80004ec <GPIO_Init+0x1c0>)
 80004c2:	685b      	ldr	r3, [r3, #4]
 80004c4:	2101      	movs	r1, #1
 80004c6:	68ba      	ldr	r2, [r7, #8]
 80004c8:	fa01 f202 	lsl.w	r2, r1, r2
 80004cc:	4611      	mov	r1, r2
 80004ce:	4a07      	ldr	r2, [pc, #28]	; (80004ec <GPIO_Init+0x1c0>)
 80004d0:	430b      	orrs	r3, r1
 80004d2:	6053      	str	r3, [r2, #4]
					break;
 80004d4:	bf00      	nop
		break;
 80004d6:	bf00      	nop
}
 80004d8:	bf00      	nop
 80004da:	3714      	adds	r7, #20
 80004dc:	46bd      	mov	sp, r7
 80004de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004e2:	4770      	bx	lr
 80004e4:	40023800 	.word	0x40023800
 80004e8:	40020000 	.word	0x40020000
 80004ec:	40020400 	.word	0x40020400

080004f0 <GPIO_WritePin>:

unsigned char GPIO_WritePin(char Port, unsigned int PIN_NO, unsigned int Data)
{
 80004f0:	b480      	push	{r7}
 80004f2:	b087      	sub	sp, #28
 80004f4:	af00      	add	r7, sp, #0
 80004f6:	4603      	mov	r3, r0
 80004f8:	60b9      	str	r1, [r7, #8]
 80004fa:	607a      	str	r2, [r7, #4]
 80004fc:	73fb      	strb	r3, [r7, #15]
	unsigned char result;
	switch(Port)
 80004fe:	7bfb      	ldrb	r3, [r7, #15]
 8000500:	2b41      	cmp	r3, #65	; 0x41
 8000502:	d002      	beq.n	800050a <GPIO_WritePin+0x1a>
 8000504:	2b42      	cmp	r3, #66	; 0x42
 8000506:	d02d      	beq.n	8000564 <GPIO_WritePin+0x74>
 8000508:	e059      	b.n	80005be <GPIO_WritePin+0xce>
	{
		case('A'):
			if((GPIOA_MODER & (0x03 << 2*PIN_NO)) >> (2*PIN_NO) == 1)
 800050a:	4b30      	ldr	r3, [pc, #192]	; (80005cc <GPIO_WritePin+0xdc>)
 800050c:	681b      	ldr	r3, [r3, #0]
 800050e:	68ba      	ldr	r2, [r7, #8]
 8000510:	0052      	lsls	r2, r2, #1
 8000512:	2103      	movs	r1, #3
 8000514:	fa01 f202 	lsl.w	r2, r1, r2
 8000518:	401a      	ands	r2, r3
 800051a:	68bb      	ldr	r3, [r7, #8]
 800051c:	005b      	lsls	r3, r3, #1
 800051e:	fa22 f303 	lsr.w	r3, r2, r3
 8000522:	2b01      	cmp	r3, #1
 8000524:	d11b      	bne.n	800055e <GPIO_WritePin+0x6e>
			{
			     if(Data)
 8000526:	687b      	ldr	r3, [r7, #4]
 8000528:	2b00      	cmp	r3, #0
 800052a:	d00a      	beq.n	8000542 <GPIO_WritePin+0x52>
			     {
			    	 GPIOA_ODR |= (1<<PIN_NO);
 800052c:	4b27      	ldr	r3, [pc, #156]	; (80005cc <GPIO_WritePin+0xdc>)
 800052e:	695b      	ldr	r3, [r3, #20]
 8000530:	2101      	movs	r1, #1
 8000532:	68ba      	ldr	r2, [r7, #8]
 8000534:	fa01 f202 	lsl.w	r2, r1, r2
 8000538:	4611      	mov	r1, r2
 800053a:	4a24      	ldr	r2, [pc, #144]	; (80005cc <GPIO_WritePin+0xdc>)
 800053c:	430b      	orrs	r3, r1
 800053e:	6153      	str	r3, [r2, #20]
 8000540:	e00a      	b.n	8000558 <GPIO_WritePin+0x68>
			     }
			     else
			     {
			    	 GPIOA_ODR &= ~(1<<PIN_NO);
 8000542:	4b22      	ldr	r3, [pc, #136]	; (80005cc <GPIO_WritePin+0xdc>)
 8000544:	695b      	ldr	r3, [r3, #20]
 8000546:	2101      	movs	r1, #1
 8000548:	68ba      	ldr	r2, [r7, #8]
 800054a:	fa01 f202 	lsl.w	r2, r1, r2
 800054e:	43d2      	mvns	r2, r2
 8000550:	4611      	mov	r1, r2
 8000552:	4a1e      	ldr	r2, [pc, #120]	; (80005cc <GPIO_WritePin+0xdc>)
 8000554:	400b      	ands	r3, r1
 8000556:	6153      	str	r3, [r2, #20]
			     }
				result = OK;
 8000558:	2300      	movs	r3, #0
 800055a:	75fb      	strb	r3, [r7, #23]
			}
			else
			{
				result = NOK;
			}
		break;
 800055c:	e02f      	b.n	80005be <GPIO_WritePin+0xce>
				result = NOK;
 800055e:	2301      	movs	r3, #1
 8000560:	75fb      	strb	r3, [r7, #23]
		break;
 8000562:	e02c      	b.n	80005be <GPIO_WritePin+0xce>
		case('B'):
				if((GPIOB_MODER & (0x01 << 2*PIN_NO))>> (2*PIN_NO))
 8000564:	4b1a      	ldr	r3, [pc, #104]	; (80005d0 <GPIO_WritePin+0xe0>)
 8000566:	681b      	ldr	r3, [r3, #0]
 8000568:	68ba      	ldr	r2, [r7, #8]
 800056a:	0052      	lsls	r2, r2, #1
 800056c:	2101      	movs	r1, #1
 800056e:	fa01 f202 	lsl.w	r2, r1, r2
 8000572:	401a      	ands	r2, r3
 8000574:	68bb      	ldr	r3, [r7, #8]
 8000576:	005b      	lsls	r3, r3, #1
 8000578:	fa22 f303 	lsr.w	r3, r2, r3
 800057c:	2b00      	cmp	r3, #0
 800057e:	d01b      	beq.n	80005b8 <GPIO_WritePin+0xc8>
				{
					 if(Data)
 8000580:	687b      	ldr	r3, [r7, #4]
 8000582:	2b00      	cmp	r3, #0
 8000584:	d00a      	beq.n	800059c <GPIO_WritePin+0xac>
					 {
						 GPIOB_ODR |= (1<<PIN_NO);
 8000586:	4b12      	ldr	r3, [pc, #72]	; (80005d0 <GPIO_WritePin+0xe0>)
 8000588:	695b      	ldr	r3, [r3, #20]
 800058a:	2101      	movs	r1, #1
 800058c:	68ba      	ldr	r2, [r7, #8]
 800058e:	fa01 f202 	lsl.w	r2, r1, r2
 8000592:	4611      	mov	r1, r2
 8000594:	4a0e      	ldr	r2, [pc, #56]	; (80005d0 <GPIO_WritePin+0xe0>)
 8000596:	430b      	orrs	r3, r1
 8000598:	6153      	str	r3, [r2, #20]
 800059a:	e00a      	b.n	80005b2 <GPIO_WritePin+0xc2>
					 }
					 else
					 {
						 GPIOB_ODR &= ~(1<<PIN_NO);
 800059c:	4b0c      	ldr	r3, [pc, #48]	; (80005d0 <GPIO_WritePin+0xe0>)
 800059e:	695b      	ldr	r3, [r3, #20]
 80005a0:	2101      	movs	r1, #1
 80005a2:	68ba      	ldr	r2, [r7, #8]
 80005a4:	fa01 f202 	lsl.w	r2, r1, r2
 80005a8:	43d2      	mvns	r2, r2
 80005aa:	4611      	mov	r1, r2
 80005ac:	4a08      	ldr	r2, [pc, #32]	; (80005d0 <GPIO_WritePin+0xe0>)
 80005ae:	400b      	ands	r3, r1
 80005b0:	6153      	str	r3, [r2, #20]
					 }
					result = OK;
 80005b2:	2300      	movs	r3, #0
 80005b4:	75fb      	strb	r3, [r7, #23]
				else
				{
					result = NOK;
				}

		break;
 80005b6:	e001      	b.n	80005bc <GPIO_WritePin+0xcc>
					result = NOK;
 80005b8:	2301      	movs	r3, #1
 80005ba:	75fb      	strb	r3, [r7, #23]
		break;
 80005bc:	bf00      	nop

	}// end switch

	return result;
 80005be:	7dfb      	ldrb	r3, [r7, #23]
}
 80005c0:	4618      	mov	r0, r3
 80005c2:	371c      	adds	r7, #28
 80005c4:	46bd      	mov	sp, r7
 80005c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005ca:	4770      	bx	lr
 80005cc:	40020000 	.word	0x40020000
 80005d0:	40020400 	.word	0x40020400

080005d4 <GPIO_ReadPin>:
unsigned char GPIO_ReadPin(char Port, unsigned int PIN_NO)
{
 80005d4:	b480      	push	{r7}
 80005d6:	b085      	sub	sp, #20
 80005d8:	af00      	add	r7, sp, #0
 80005da:	4603      	mov	r3, r0
 80005dc:	6039      	str	r1, [r7, #0]
 80005de:	71fb      	strb	r3, [r7, #7]
	unsigned char bitstatus;
	switch(Port){
 80005e0:	79fb      	ldrb	r3, [r7, #7]
 80005e2:	2b41      	cmp	r3, #65	; 0x41
 80005e4:	d002      	beq.n	80005ec <GPIO_ReadPin+0x18>
 80005e6:	2b42      	cmp	r3, #66	; 0x42
 80005e8:	d00b      	beq.n	8000602 <GPIO_ReadPin+0x2e>
 80005ea:	e015      	b.n	8000618 <GPIO_ReadPin+0x44>
	case('A'):

		bitstatus=(GPIOA_IDR & (1<<PIN_NO))>>PIN_NO;
 80005ec:	4b0e      	ldr	r3, [pc, #56]	; (8000628 <GPIO_ReadPin+0x54>)
 80005ee:	691b      	ldr	r3, [r3, #16]
 80005f0:	2101      	movs	r1, #1
 80005f2:	683a      	ldr	r2, [r7, #0]
 80005f4:	fa01 f202 	lsl.w	r2, r1, r2
 80005f8:	401a      	ands	r2, r3
 80005fa:	683b      	ldr	r3, [r7, #0]
 80005fc:	fa22 f303 	lsr.w	r3, r2, r3
 8000600:	73fb      	strb	r3, [r7, #15]


	case('B'):
		bitstatus=(GPIOB_IDR & (1<<PIN_NO))>>PIN_NO;
 8000602:	4b0a      	ldr	r3, [pc, #40]	; (800062c <GPIO_ReadPin+0x58>)
 8000604:	691b      	ldr	r3, [r3, #16]
 8000606:	2101      	movs	r1, #1
 8000608:	683a      	ldr	r2, [r7, #0]
 800060a:	fa01 f202 	lsl.w	r2, r1, r2
 800060e:	401a      	ands	r2, r3
 8000610:	683b      	ldr	r3, [r7, #0]
 8000612:	fa22 f303 	lsr.w	r3, r2, r3
 8000616:	73fb      	strb	r3, [r7, #15]

	}
	return bitstatus;
 8000618:	7bfb      	ldrb	r3, [r7, #15]


}
 800061a:	4618      	mov	r0, r3
 800061c:	3714      	adds	r7, #20
 800061e:	46bd      	mov	sp, r7
 8000620:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000624:	4770      	bx	lr
 8000626:	bf00      	nop
 8000628:	40020000 	.word	0x40020000
 800062c:	40020400 	.word	0x40020400

08000630 <__libc_init_array>:
 8000630:	b570      	push	{r4, r5, r6, lr}
 8000632:	4d0d      	ldr	r5, [pc, #52]	; (8000668 <__libc_init_array+0x38>)
 8000634:	4c0d      	ldr	r4, [pc, #52]	; (800066c <__libc_init_array+0x3c>)
 8000636:	1b64      	subs	r4, r4, r5
 8000638:	10a4      	asrs	r4, r4, #2
 800063a:	2600      	movs	r6, #0
 800063c:	42a6      	cmp	r6, r4
 800063e:	d109      	bne.n	8000654 <__libc_init_array+0x24>
 8000640:	4d0b      	ldr	r5, [pc, #44]	; (8000670 <__libc_init_array+0x40>)
 8000642:	4c0c      	ldr	r4, [pc, #48]	; (8000674 <__libc_init_array+0x44>)
 8000644:	f000 f818 	bl	8000678 <_init>
 8000648:	1b64      	subs	r4, r4, r5
 800064a:	10a4      	asrs	r4, r4, #2
 800064c:	2600      	movs	r6, #0
 800064e:	42a6      	cmp	r6, r4
 8000650:	d105      	bne.n	800065e <__libc_init_array+0x2e>
 8000652:	bd70      	pop	{r4, r5, r6, pc}
 8000654:	f855 3b04 	ldr.w	r3, [r5], #4
 8000658:	4798      	blx	r3
 800065a:	3601      	adds	r6, #1
 800065c:	e7ee      	b.n	800063c <__libc_init_array+0xc>
 800065e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000662:	4798      	blx	r3
 8000664:	3601      	adds	r6, #1
 8000666:	e7f2      	b.n	800064e <__libc_init_array+0x1e>
 8000668:	08000690 	.word	0x08000690
 800066c:	08000690 	.word	0x08000690
 8000670:	08000690 	.word	0x08000690
 8000674:	08000694 	.word	0x08000694

08000678 <_init>:
 8000678:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800067a:	bf00      	nop
 800067c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800067e:	bc08      	pop	{r3}
 8000680:	469e      	mov	lr, r3
 8000682:	4770      	bx	lr

08000684 <_fini>:
 8000684:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000686:	bf00      	nop
 8000688:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800068a:	bc08      	pop	{r3}
 800068c:	469e      	mov	lr, r3
 800068e:	4770      	bx	lr
