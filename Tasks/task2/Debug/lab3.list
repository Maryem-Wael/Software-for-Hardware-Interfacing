
lab3.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000022c  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080003c0  080003c0  00020004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080003c0  080003c0  00020004  2**0
                  CONTENTS
  4 .ARM          00000000  080003c0  080003c0  00020004  2**0
                  CONTENTS
  5 .preinit_array 00000000  080003c0  080003c0  00020004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080003c0  080003c0  000103c0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080003c4  080003c4  000103c4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000004  20000000  080003c8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000024  20000004  080003cc  00020004  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000028  080003cc  00020028  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020004  2**0
                  CONTENTS, READONLY
 12 .debug_info   000009e2  00000000  00000000  00020034  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000284  00000000  00000000  00020a16  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000078  00000000  00000000  00020ca0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000050  00000000  00000000  00020d18  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000dd5f  00000000  00000000  00020d68  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000a61  00000000  00000000  0002eac7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0004faee  00000000  00000000  0002f528  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0007f016  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000000dc  00000000  00000000  0007f06c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000004 	.word	0x20000004
 80001b0:	00000000 	.word	0x00000000
 80001b4:	080003a8 	.word	0x080003a8

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000008 	.word	0x20000008
 80001d0:	080003a8 	.word	0x080003a8

080001d4 <delay>:


int state;
int i;
void delay(int sec)
{
 80001d4:	b480      	push	{r7}
 80001d6:	b083      	sub	sp, #12
 80001d8:	af00      	add	r7, sp, #0
 80001da:	6078      	str	r0, [r7, #4]
    for (i=0;i<=sec;i++){}
 80001dc:	4b0a      	ldr	r3, [pc, #40]	; (8000208 <delay+0x34>)
 80001de:	2200      	movs	r2, #0
 80001e0:	601a      	str	r2, [r3, #0]
 80001e2:	e004      	b.n	80001ee <delay+0x1a>
 80001e4:	4b08      	ldr	r3, [pc, #32]	; (8000208 <delay+0x34>)
 80001e6:	681b      	ldr	r3, [r3, #0]
 80001e8:	3301      	adds	r3, #1
 80001ea:	4a07      	ldr	r2, [pc, #28]	; (8000208 <delay+0x34>)
 80001ec:	6013      	str	r3, [r2, #0]
 80001ee:	4b06      	ldr	r3, [pc, #24]	; (8000208 <delay+0x34>)
 80001f0:	681b      	ldr	r3, [r3, #0]
 80001f2:	687a      	ldr	r2, [r7, #4]
 80001f4:	429a      	cmp	r2, r3
 80001f6:	daf5      	bge.n	80001e4 <delay+0x10>
}
 80001f8:	bf00      	nop
 80001fa:	bf00      	nop
 80001fc:	370c      	adds	r7, #12
 80001fe:	46bd      	mov	sp, r7
 8000200:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000204:	4770      	bx	lr
 8000206:	bf00      	nop
 8000208:	20000024 	.word	0x20000024

0800020c <main>:
int color=1;
int main()
{
 800020c:	b580      	push	{r7, lr}
 800020e:	b082      	sub	sp, #8
 8000210:	af00      	add	r7, sp, #0

    RCC_AHB1ENR |= (1<<1);
 8000212:	4b32      	ldr	r3, [pc, #200]	; (80002dc <main+0xd0>)
 8000214:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000216:	4a31      	ldr	r2, [pc, #196]	; (80002dc <main+0xd0>)
 8000218:	f043 0302 	orr.w	r3, r3, #2
 800021c:	6313      	str	r3, [r2, #48]	; 0x30
    GPIOB_MODER &= ~(1<<(2*3));
 800021e:	4b30      	ldr	r3, [pc, #192]	; (80002e0 <main+0xd4>)
 8000220:	681b      	ldr	r3, [r3, #0]
 8000222:	4a2f      	ldr	r2, [pc, #188]	; (80002e0 <main+0xd4>)
 8000224:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000228:	6013      	str	r3, [r2, #0]
    GPIOB_MODER &= ~(1<<(2*5));
 800022a:	4b2d      	ldr	r3, [pc, #180]	; (80002e0 <main+0xd4>)
 800022c:	681b      	ldr	r3, [r3, #0]
 800022e:	4a2c      	ldr	r2, [pc, #176]	; (80002e0 <main+0xd4>)
 8000230:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8000234:	6013      	str	r3, [r2, #0]
    GPIOB_MODER &= ~(1<<(2*6));
 8000236:	4b2a      	ldr	r3, [pc, #168]	; (80002e0 <main+0xd4>)
 8000238:	681b      	ldr	r3, [r3, #0]
 800023a:	4a29      	ldr	r2, [pc, #164]	; (80002e0 <main+0xd4>)
 800023c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000240:	6013      	str	r3, [r2, #0]
    GPIOB_MODER &= ~(1<<(2*7));
 8000242:	4b27      	ldr	r3, [pc, #156]	; (80002e0 <main+0xd4>)
 8000244:	681b      	ldr	r3, [r3, #0]
 8000246:	4a26      	ldr	r2, [pc, #152]	; (80002e0 <main+0xd4>)
 8000248:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800024c:	6013      	str	r3, [r2, #0]
    GPIOB_MODER |= (1<<(2*5));
 800024e:	4b24      	ldr	r3, [pc, #144]	; (80002e0 <main+0xd4>)
 8000250:	681b      	ldr	r3, [r3, #0]
 8000252:	4a23      	ldr	r2, [pc, #140]	; (80002e0 <main+0xd4>)
 8000254:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000258:	6013      	str	r3, [r2, #0]
	GPIOB_MODER |= (1<<(2*6));
 800025a:	4b21      	ldr	r3, [pc, #132]	; (80002e0 <main+0xd4>)
 800025c:	681b      	ldr	r3, [r3, #0]
 800025e:	4a20      	ldr	r2, [pc, #128]	; (80002e0 <main+0xd4>)
 8000260:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000264:	6013      	str	r3, [r2, #0]
	GPIOB_MODER |= (1<<(2*7));
 8000266:	4b1e      	ldr	r3, [pc, #120]	; (80002e0 <main+0xd4>)
 8000268:	681b      	ldr	r3, [r3, #0]
 800026a:	4a1d      	ldr	r2, [pc, #116]	; (80002e0 <main+0xd4>)
 800026c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000270:	6013      	str	r3, [r2, #0]
	GPIOB_OTYPER &= ~(7<<5);
 8000272:	4b1b      	ldr	r3, [pc, #108]	; (80002e0 <main+0xd4>)
 8000274:	685b      	ldr	r3, [r3, #4]
 8000276:	4a1a      	ldr	r2, [pc, #104]	; (80002e0 <main+0xd4>)
 8000278:	f023 03e0 	bic.w	r3, r3, #224	; 0xe0
 800027c:	6053      	str	r3, [r2, #4]
	while(1){
        int state= ((GPIOB_IDR & (1<<3))>>3);
 800027e:	4b18      	ldr	r3, [pc, #96]	; (80002e0 <main+0xd4>)
 8000280:	691b      	ldr	r3, [r3, #16]
 8000282:	08db      	lsrs	r3, r3, #3
 8000284:	f003 0301 	and.w	r3, r3, #1
 8000288:	607b      	str	r3, [r7, #4]
        delay(1000);
 800028a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800028e:	f7ff ffa1 	bl	80001d4 <delay>

        if(state&&!((GPIOB_IDR & (1<<3))>>3))
 8000292:	687b      	ldr	r3, [r7, #4]
 8000294:	2b00      	cmp	r3, #0
 8000296:	d0f2      	beq.n	800027e <main+0x72>
 8000298:	4b11      	ldr	r3, [pc, #68]	; (80002e0 <main+0xd4>)
 800029a:	691b      	ldr	r3, [r3, #16]
 800029c:	f003 0308 	and.w	r3, r3, #8
 80002a0:	2b00      	cmp	r3, #0
 80002a2:	d1ec      	bne.n	800027e <main+0x72>
            {GPIOB_ODR &= ~(7<<5);
 80002a4:	4b0e      	ldr	r3, [pc, #56]	; (80002e0 <main+0xd4>)
 80002a6:	695b      	ldr	r3, [r3, #20]
 80002a8:	4a0d      	ldr	r2, [pc, #52]	; (80002e0 <main+0xd4>)
 80002aa:	f023 03e0 	bic.w	r3, r3, #224	; 0xe0
 80002ae:	6153      	str	r3, [r2, #20]
        	GPIOB_ODR |= (color<<5);
 80002b0:	4b0b      	ldr	r3, [pc, #44]	; (80002e0 <main+0xd4>)
 80002b2:	695b      	ldr	r3, [r3, #20]
 80002b4:	4a0b      	ldr	r2, [pc, #44]	; (80002e4 <main+0xd8>)
 80002b6:	6812      	ldr	r2, [r2, #0]
 80002b8:	0152      	lsls	r2, r2, #5
 80002ba:	4611      	mov	r1, r2
 80002bc:	4a08      	ldr	r2, [pc, #32]	; (80002e0 <main+0xd4>)
 80002be:	430b      	orrs	r3, r1
 80002c0:	6153      	str	r3, [r2, #20]
        	color+=1;
 80002c2:	4b08      	ldr	r3, [pc, #32]	; (80002e4 <main+0xd8>)
 80002c4:	681b      	ldr	r3, [r3, #0]
 80002c6:	3301      	adds	r3, #1
 80002c8:	4a06      	ldr	r2, [pc, #24]	; (80002e4 <main+0xd8>)
 80002ca:	6013      	str	r3, [r2, #0]
        	if (color>=7)
 80002cc:	4b05      	ldr	r3, [pc, #20]	; (80002e4 <main+0xd8>)
 80002ce:	681b      	ldr	r3, [r3, #0]
 80002d0:	2b06      	cmp	r3, #6
 80002d2:	ddd4      	ble.n	800027e <main+0x72>
        		{color=1;}}
 80002d4:	4b03      	ldr	r3, [pc, #12]	; (80002e4 <main+0xd8>)
 80002d6:	2201      	movs	r2, #1
 80002d8:	601a      	str	r2, [r3, #0]
	while(1){
 80002da:	e7d0      	b.n	800027e <main+0x72>
 80002dc:	40023800 	.word	0x40023800
 80002e0:	40020400 	.word	0x40020400
 80002e4:	20000000 	.word	0x20000000

080002e8 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80002e8:	b480      	push	{r7}
 80002ea:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80002ec:	4b06      	ldr	r3, [pc, #24]	; (8000308 <SystemInit+0x20>)
 80002ee:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80002f2:	4a05      	ldr	r2, [pc, #20]	; (8000308 <SystemInit+0x20>)
 80002f4:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80002f8:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80002fc:	bf00      	nop
 80002fe:	46bd      	mov	sp, r7
 8000300:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000304:	4770      	bx	lr
 8000306:	bf00      	nop
 8000308:	e000ed00 	.word	0xe000ed00

0800030c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 800030c:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000344 <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8000310:	480d      	ldr	r0, [pc, #52]	; (8000348 <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 8000312:	490e      	ldr	r1, [pc, #56]	; (800034c <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 8000314:	4a0e      	ldr	r2, [pc, #56]	; (8000350 <LoopFillZerobss+0x1e>)
  movs r3, #0
 8000316:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000318:	e002      	b.n	8000320 <LoopCopyDataInit>

0800031a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800031a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800031c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800031e:	3304      	adds	r3, #4

08000320 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000320:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000322:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000324:	d3f9      	bcc.n	800031a <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000326:	4a0b      	ldr	r2, [pc, #44]	; (8000354 <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 8000328:	4c0b      	ldr	r4, [pc, #44]	; (8000358 <LoopFillZerobss+0x26>)
  movs r3, #0
 800032a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800032c:	e001      	b.n	8000332 <LoopFillZerobss>

0800032e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800032e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000330:	3204      	adds	r2, #4

08000332 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000332:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000334:	d3fb      	bcc.n	800032e <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000336:	f7ff ffd7 	bl	80002e8 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800033a:	f000 f811 	bl	8000360 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800033e:	f7ff ff65 	bl	800020c <main>
  bx  lr    
 8000342:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 8000344:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 8000348:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800034c:	20000004 	.word	0x20000004
  ldr r2, =_sidata
 8000350:	080003c8 	.word	0x080003c8
  ldr r2, =_sbss
 8000354:	20000004 	.word	0x20000004
  ldr r4, =_ebss
 8000358:	20000028 	.word	0x20000028

0800035c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800035c:	e7fe      	b.n	800035c <ADC_IRQHandler>
	...

08000360 <__libc_init_array>:
 8000360:	b570      	push	{r4, r5, r6, lr}
 8000362:	4d0d      	ldr	r5, [pc, #52]	; (8000398 <__libc_init_array+0x38>)
 8000364:	4c0d      	ldr	r4, [pc, #52]	; (800039c <__libc_init_array+0x3c>)
 8000366:	1b64      	subs	r4, r4, r5
 8000368:	10a4      	asrs	r4, r4, #2
 800036a:	2600      	movs	r6, #0
 800036c:	42a6      	cmp	r6, r4
 800036e:	d109      	bne.n	8000384 <__libc_init_array+0x24>
 8000370:	4d0b      	ldr	r5, [pc, #44]	; (80003a0 <__libc_init_array+0x40>)
 8000372:	4c0c      	ldr	r4, [pc, #48]	; (80003a4 <__libc_init_array+0x44>)
 8000374:	f000 f818 	bl	80003a8 <_init>
 8000378:	1b64      	subs	r4, r4, r5
 800037a:	10a4      	asrs	r4, r4, #2
 800037c:	2600      	movs	r6, #0
 800037e:	42a6      	cmp	r6, r4
 8000380:	d105      	bne.n	800038e <__libc_init_array+0x2e>
 8000382:	bd70      	pop	{r4, r5, r6, pc}
 8000384:	f855 3b04 	ldr.w	r3, [r5], #4
 8000388:	4798      	blx	r3
 800038a:	3601      	adds	r6, #1
 800038c:	e7ee      	b.n	800036c <__libc_init_array+0xc>
 800038e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000392:	4798      	blx	r3
 8000394:	3601      	adds	r6, #1
 8000396:	e7f2      	b.n	800037e <__libc_init_array+0x1e>
 8000398:	080003c0 	.word	0x080003c0
 800039c:	080003c0 	.word	0x080003c0
 80003a0:	080003c0 	.word	0x080003c0
 80003a4:	080003c4 	.word	0x080003c4

080003a8 <_init>:
 80003a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003aa:	bf00      	nop
 80003ac:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003ae:	bc08      	pop	{r3}
 80003b0:	469e      	mov	lr, r3
 80003b2:	4770      	bx	lr

080003b4 <_fini>:
 80003b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003b6:	bf00      	nop
 80003b8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003ba:	bc08      	pop	{r3}
 80003bc:	469e      	mov	lr, r3
 80003be:	4770      	bx	lr
