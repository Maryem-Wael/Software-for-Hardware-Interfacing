
Lab 4.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000009bc  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000b50  08000b58  00010b58  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000b50  08000b50  00010b58  2**0
                  CONTENTS
  4 .ARM          00000000  08000b50  08000b50  00010b58  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000b50  08000b58  00010b58  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000b50  08000b50  00010b50  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000b54  08000b54  00010b54  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010b58  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000b58  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000b58  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010b58  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000d73  00000000  00000000  00010b88  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000031a  00000000  00000000  000118fb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000098  00000000  00000000  00011c18  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000060  00000000  00000000  00011cb0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000de7f  00000000  00000000  00011d10  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000011da  00000000  00000000  0001fb8f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0004fc30  00000000  00000000  00020d69  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  00070999  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000114  00000000  00000000  000709ec  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000b38 	.word	0x08000b38

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	08000b38 	.word	0x08000b38

080001d4 <main>:
#include "GPIO.h"
#include "stm32f401xc.h"
#include "stm32f401cc_interface.h"


int main(void) {
 80001d4:	b580      	push	{r7, lr}
 80001d6:	b096      	sub	sp, #88	; 0x58
 80001d8:	af00      	add	r7, sp, #0

	GPIO_Init('A', 0 , OUTPUT, PUSH_PULL);
 80001da:	2300      	movs	r3, #0
 80001dc:	2201      	movs	r2, #1
 80001de:	2100      	movs	r1, #0
 80001e0:	2041      	movs	r0, #65	; 0x41
 80001e2:	f000 fb31 	bl	8000848 <GPIO_Init>
	GPIO_Init('A', 1 , OUTPUT, PUSH_PULL);
 80001e6:	2300      	movs	r3, #0
 80001e8:	2201      	movs	r2, #1
 80001ea:	2101      	movs	r1, #1
 80001ec:	2041      	movs	r0, #65	; 0x41
 80001ee:	f000 fb2b 	bl	8000848 <GPIO_Init>
	GPIO_Init('A', 2 , OUTPUT, PUSH_PULL);
 80001f2:	2300      	movs	r3, #0
 80001f4:	2201      	movs	r2, #1
 80001f6:	2102      	movs	r1, #2
 80001f8:	2041      	movs	r0, #65	; 0x41
 80001fa:	f000 fb25 	bl	8000848 <GPIO_Init>
	GPIO_Init('A', 3 , OUTPUT, PUSH_PULL);
 80001fe:	2300      	movs	r3, #0
 8000200:	2201      	movs	r2, #1
 8000202:	2103      	movs	r1, #3
 8000204:	2041      	movs	r0, #65	; 0x41
 8000206:	f000 fb1f 	bl	8000848 <GPIO_Init>
	GPIO_Init('A', 4 , OUTPUT, PUSH_PULL);
 800020a:	2300      	movs	r3, #0
 800020c:	2201      	movs	r2, #1
 800020e:	2104      	movs	r1, #4
 8000210:	2041      	movs	r0, #65	; 0x41
 8000212:	f000 fb19 	bl	8000848 <GPIO_Init>
	GPIO_Init('A', 5 , OUTPUT, PUSH_PULL);
 8000216:	2300      	movs	r3, #0
 8000218:	2201      	movs	r2, #1
 800021a:	2105      	movs	r1, #5
 800021c:	2041      	movs	r0, #65	; 0x41
 800021e:	f000 fb13 	bl	8000848 <GPIO_Init>
	GPIO_Init('A', 6 , OUTPUT, PUSH_PULL);
 8000222:	2300      	movs	r3, #0
 8000224:	2201      	movs	r2, #1
 8000226:	2106      	movs	r1, #6
 8000228:	2041      	movs	r0, #65	; 0x41
 800022a:	f000 fb0d 	bl	8000848 <GPIO_Init>
	GPIO_Init('A', 7 , OUTPUT, PUSH_PULL);
 800022e:	2300      	movs	r3, #0
 8000230:	2201      	movs	r2, #1
 8000232:	2107      	movs	r1, #7
 8000234:	2041      	movs	r0, #65	; 0x41
 8000236:	f000 fb07 	bl	8000848 <GPIO_Init>

  while (1) {
	  GPIO_WritePin('A', 0, 1);
 800023a:	2201      	movs	r2, #1
 800023c:	2100      	movs	r1, #0
 800023e:	2041      	movs	r0, #65	; 0x41
 8000240:	f000 fbe4 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 1, 1);
 8000244:	2201      	movs	r2, #1
 8000246:	2101      	movs	r1, #1
 8000248:	2041      	movs	r0, #65	; 0x41
 800024a:	f000 fbdf 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 2, 1);
 800024e:	2201      	movs	r2, #1
 8000250:	2102      	movs	r1, #2
 8000252:	2041      	movs	r0, #65	; 0x41
 8000254:	f000 fbda 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 3, 1);
 8000258:	2201      	movs	r2, #1
 800025a:	2103      	movs	r1, #3
 800025c:	2041      	movs	r0, #65	; 0x41
 800025e:	f000 fbd5 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 4, 1);
 8000262:	2201      	movs	r2, #1
 8000264:	2104      	movs	r1, #4
 8000266:	2041      	movs	r0, #65	; 0x41
 8000268:	f000 fbd0 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 5, 1);
 800026c:	2201      	movs	r2, #1
 800026e:	2105      	movs	r1, #5
 8000270:	2041      	movs	r0, #65	; 0x41
 8000272:	f000 fbcb 	bl	8000a0c <GPIO_WritePin>



	  //delay
	  for (int i = 0; i < 1000000; i++)
 8000276:	2300      	movs	r3, #0
 8000278:	657b      	str	r3, [r7, #84]	; 0x54
 800027a:	e002      	b.n	8000282 <main+0xae>
 800027c:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800027e:	3301      	adds	r3, #1
 8000280:	657b      	str	r3, [r7, #84]	; 0x54
 8000282:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8000284:	4ac0      	ldr	r2, [pc, #768]	; (8000588 <main+0x3b4>)
 8000286:	4293      	cmp	r3, r2
 8000288:	ddf8      	ble.n	800027c <main+0xa8>
	  {
	  }
	  //led of
	  GPIO_WritePin('A', 0, 0);
 800028a:	2200      	movs	r2, #0
 800028c:	2100      	movs	r1, #0
 800028e:	2041      	movs	r0, #65	; 0x41
 8000290:	f000 fbbc 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 1, 0);
 8000294:	2200      	movs	r2, #0
 8000296:	2101      	movs	r1, #1
 8000298:	2041      	movs	r0, #65	; 0x41
 800029a:	f000 fbb7 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 2, 0);
 800029e:	2200      	movs	r2, #0
 80002a0:	2102      	movs	r1, #2
 80002a2:	2041      	movs	r0, #65	; 0x41
 80002a4:	f000 fbb2 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 3, 0);
 80002a8:	2200      	movs	r2, #0
 80002aa:	2103      	movs	r1, #3
 80002ac:	2041      	movs	r0, #65	; 0x41
 80002ae:	f000 fbad 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 4, 0);
 80002b2:	2200      	movs	r2, #0
 80002b4:	2104      	movs	r1, #4
 80002b6:	2041      	movs	r0, #65	; 0x41
 80002b8:	f000 fba8 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 5, 0);
 80002bc:	2200      	movs	r2, #0
 80002be:	2105      	movs	r1, #5
 80002c0:	2041      	movs	r0, #65	; 0x41
 80002c2:	f000 fba3 	bl	8000a0c <GPIO_WritePin>
	  //delay
	  for (int i = 0; i < 1000000; i++)
 80002c6:	2300      	movs	r3, #0
 80002c8:	653b      	str	r3, [r7, #80]	; 0x50
 80002ca:	e002      	b.n	80002d2 <main+0xfe>
 80002cc:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80002ce:	3301      	adds	r3, #1
 80002d0:	653b      	str	r3, [r7, #80]	; 0x50
 80002d2:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80002d4:	4aac      	ldr	r2, [pc, #688]	; (8000588 <main+0x3b4>)
 80002d6:	4293      	cmp	r3, r2
 80002d8:	ddf8      	ble.n	80002cc <main+0xf8>
	  {
	  }
	  //led on
	  GPIO_WritePin('A', 1, 1);
 80002da:	2201      	movs	r2, #1
 80002dc:	2101      	movs	r1, #1
 80002de:	2041      	movs	r0, #65	; 0x41
 80002e0:	f000 fb94 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 2, 1);
 80002e4:	2201      	movs	r2, #1
 80002e6:	2102      	movs	r1, #2
 80002e8:	2041      	movs	r0, #65	; 0x41
 80002ea:	f000 fb8f 	bl	8000a0c <GPIO_WritePin>

	  //delay
	  for (int i = 0; i < 1000000; i++)
 80002ee:	2300      	movs	r3, #0
 80002f0:	64fb      	str	r3, [r7, #76]	; 0x4c
 80002f2:	e002      	b.n	80002fa <main+0x126>
 80002f4:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80002f6:	3301      	adds	r3, #1
 80002f8:	64fb      	str	r3, [r7, #76]	; 0x4c
 80002fa:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80002fc:	4aa2      	ldr	r2, [pc, #648]	; (8000588 <main+0x3b4>)
 80002fe:	4293      	cmp	r3, r2
 8000300:	ddf8      	ble.n	80002f4 <main+0x120>
	  {
	  }
	  //led of
	  GPIO_WritePin('A', 1, 0);
 8000302:	2200      	movs	r2, #0
 8000304:	2101      	movs	r1, #1
 8000306:	2041      	movs	r0, #65	; 0x41
 8000308:	f000 fb80 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 2, 0);
 800030c:	2200      	movs	r2, #0
 800030e:	2102      	movs	r1, #2
 8000310:	2041      	movs	r0, #65	; 0x41
 8000312:	f000 fb7b 	bl	8000a0c <GPIO_WritePin>
	  //delay
	  for (int i = 0; i < 1000000; i++)
 8000316:	2300      	movs	r3, #0
 8000318:	64bb      	str	r3, [r7, #72]	; 0x48
 800031a:	e002      	b.n	8000322 <main+0x14e>
 800031c:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800031e:	3301      	adds	r3, #1
 8000320:	64bb      	str	r3, [r7, #72]	; 0x48
 8000322:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8000324:	4a98      	ldr	r2, [pc, #608]	; (8000588 <main+0x3b4>)
 8000326:	4293      	cmp	r3, r2
 8000328:	ddf8      	ble.n	800031c <main+0x148>
	  {
	  }
	  GPIO_WritePin('A', 0, 1);
 800032a:	2201      	movs	r2, #1
 800032c:	2100      	movs	r1, #0
 800032e:	2041      	movs	r0, #65	; 0x41
 8000330:	f000 fb6c 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 1, 1);
 8000334:	2201      	movs	r2, #1
 8000336:	2101      	movs	r1, #1
 8000338:	2041      	movs	r0, #65	; 0x41
 800033a:	f000 fb67 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 3, 1);
 800033e:	2201      	movs	r2, #1
 8000340:	2103      	movs	r1, #3
 8000342:	2041      	movs	r0, #65	; 0x41
 8000344:	f000 fb62 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 4, 1);
 8000348:	2201      	movs	r2, #1
 800034a:	2104      	movs	r1, #4
 800034c:	2041      	movs	r0, #65	; 0x41
 800034e:	f000 fb5d 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 6, 1);
 8000352:	2201      	movs	r2, #1
 8000354:	2106      	movs	r1, #6
 8000356:	2041      	movs	r0, #65	; 0x41
 8000358:	f000 fb58 	bl	8000a0c <GPIO_WritePin>

	  //delay
	  for (int i = 0; i < 1000000; i++)
 800035c:	2300      	movs	r3, #0
 800035e:	647b      	str	r3, [r7, #68]	; 0x44
 8000360:	e002      	b.n	8000368 <main+0x194>
 8000362:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8000364:	3301      	adds	r3, #1
 8000366:	647b      	str	r3, [r7, #68]	; 0x44
 8000368:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800036a:	4a87      	ldr	r2, [pc, #540]	; (8000588 <main+0x3b4>)
 800036c:	4293      	cmp	r3, r2
 800036e:	ddf8      	ble.n	8000362 <main+0x18e>
	  {
	  }
	  //led of
	  GPIO_WritePin('A', 0, 0);
 8000370:	2200      	movs	r2, #0
 8000372:	2100      	movs	r1, #0
 8000374:	2041      	movs	r0, #65	; 0x41
 8000376:	f000 fb49 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 1, 0);
 800037a:	2200      	movs	r2, #0
 800037c:	2101      	movs	r1, #1
 800037e:	2041      	movs	r0, #65	; 0x41
 8000380:	f000 fb44 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 3, 0);
 8000384:	2200      	movs	r2, #0
 8000386:	2103      	movs	r1, #3
 8000388:	2041      	movs	r0, #65	; 0x41
 800038a:	f000 fb3f 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 4, 0);
 800038e:	2200      	movs	r2, #0
 8000390:	2104      	movs	r1, #4
 8000392:	2041      	movs	r0, #65	; 0x41
 8000394:	f000 fb3a 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 6, 0);
 8000398:	2200      	movs	r2, #0
 800039a:	2106      	movs	r1, #6
 800039c:	2041      	movs	r0, #65	; 0x41
 800039e:	f000 fb35 	bl	8000a0c <GPIO_WritePin>
	  //delay
	  for (int i = 0; i < 1000000; i++)
 80003a2:	2300      	movs	r3, #0
 80003a4:	643b      	str	r3, [r7, #64]	; 0x40
 80003a6:	e002      	b.n	80003ae <main+0x1da>
 80003a8:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80003aa:	3301      	adds	r3, #1
 80003ac:	643b      	str	r3, [r7, #64]	; 0x40
 80003ae:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80003b0:	4a75      	ldr	r2, [pc, #468]	; (8000588 <main+0x3b4>)
 80003b2:	4293      	cmp	r3, r2
 80003b4:	ddf8      	ble.n	80003a8 <main+0x1d4>
	  {
	  }
	  GPIO_WritePin('A', 0, 1);
 80003b6:	2201      	movs	r2, #1
 80003b8:	2100      	movs	r1, #0
 80003ba:	2041      	movs	r0, #65	; 0x41
 80003bc:	f000 fb26 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 1, 1);
 80003c0:	2201      	movs	r2, #1
 80003c2:	2101      	movs	r1, #1
 80003c4:	2041      	movs	r0, #65	; 0x41
 80003c6:	f000 fb21 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 2, 1);
 80003ca:	2201      	movs	r2, #1
 80003cc:	2102      	movs	r1, #2
 80003ce:	2041      	movs	r0, #65	; 0x41
 80003d0:	f000 fb1c 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 3, 1);
 80003d4:	2201      	movs	r2, #1
 80003d6:	2103      	movs	r1, #3
 80003d8:	2041      	movs	r0, #65	; 0x41
 80003da:	f000 fb17 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 6, 1);
 80003de:	2201      	movs	r2, #1
 80003e0:	2106      	movs	r1, #6
 80003e2:	2041      	movs	r0, #65	; 0x41
 80003e4:	f000 fb12 	bl	8000a0c <GPIO_WritePin>

	  //delay
	  for (int i = 0; i < 1000000; i++)
 80003e8:	2300      	movs	r3, #0
 80003ea:	63fb      	str	r3, [r7, #60]	; 0x3c
 80003ec:	e002      	b.n	80003f4 <main+0x220>
 80003ee:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80003f0:	3301      	adds	r3, #1
 80003f2:	63fb      	str	r3, [r7, #60]	; 0x3c
 80003f4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80003f6:	4a64      	ldr	r2, [pc, #400]	; (8000588 <main+0x3b4>)
 80003f8:	4293      	cmp	r3, r2
 80003fa:	ddf8      	ble.n	80003ee <main+0x21a>
	  {
	  }
	  //led of
	  GPIO_WritePin('A', 0, 0);
 80003fc:	2200      	movs	r2, #0
 80003fe:	2100      	movs	r1, #0
 8000400:	2041      	movs	r0, #65	; 0x41
 8000402:	f000 fb03 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 1, 0);
 8000406:	2200      	movs	r2, #0
 8000408:	2101      	movs	r1, #1
 800040a:	2041      	movs	r0, #65	; 0x41
 800040c:	f000 fafe 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 2, 0);
 8000410:	2200      	movs	r2, #0
 8000412:	2102      	movs	r1, #2
 8000414:	2041      	movs	r0, #65	; 0x41
 8000416:	f000 faf9 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 3, 0);
 800041a:	2200      	movs	r2, #0
 800041c:	2103      	movs	r1, #3
 800041e:	2041      	movs	r0, #65	; 0x41
 8000420:	f000 faf4 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 6, 0);
 8000424:	2200      	movs	r2, #0
 8000426:	2106      	movs	r1, #6
 8000428:	2041      	movs	r0, #65	; 0x41
 800042a:	f000 faef 	bl	8000a0c <GPIO_WritePin>
	  //delay
	  for (int i = 0; i < 1000000; i++)
 800042e:	2300      	movs	r3, #0
 8000430:	63bb      	str	r3, [r7, #56]	; 0x38
 8000432:	e002      	b.n	800043a <main+0x266>
 8000434:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8000436:	3301      	adds	r3, #1
 8000438:	63bb      	str	r3, [r7, #56]	; 0x38
 800043a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800043c:	4a52      	ldr	r2, [pc, #328]	; (8000588 <main+0x3b4>)
 800043e:	4293      	cmp	r3, r2
 8000440:	ddf8      	ble.n	8000434 <main+0x260>
	  {
	  }
	  GPIO_WritePin('A', 1, 1);
 8000442:	2201      	movs	r2, #1
 8000444:	2101      	movs	r1, #1
 8000446:	2041      	movs	r0, #65	; 0x41
 8000448:	f000 fae0 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 2, 1);
 800044c:	2201      	movs	r2, #1
 800044e:	2102      	movs	r1, #2
 8000450:	2041      	movs	r0, #65	; 0x41
 8000452:	f000 fadb 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 5, 1);
 8000456:	2201      	movs	r2, #1
 8000458:	2105      	movs	r1, #5
 800045a:	2041      	movs	r0, #65	; 0x41
 800045c:	f000 fad6 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 6, 1);
 8000460:	2201      	movs	r2, #1
 8000462:	2106      	movs	r1, #6
 8000464:	2041      	movs	r0, #65	; 0x41
 8000466:	f000 fad1 	bl	8000a0c <GPIO_WritePin>

	  //delay
	  for (int i = 0; i < 1000000; i++)
 800046a:	2300      	movs	r3, #0
 800046c:	637b      	str	r3, [r7, #52]	; 0x34
 800046e:	e002      	b.n	8000476 <main+0x2a2>
 8000470:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8000472:	3301      	adds	r3, #1
 8000474:	637b      	str	r3, [r7, #52]	; 0x34
 8000476:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8000478:	4a43      	ldr	r2, [pc, #268]	; (8000588 <main+0x3b4>)
 800047a:	4293      	cmp	r3, r2
 800047c:	ddf8      	ble.n	8000470 <main+0x29c>
	  {
	  }
	  //led of
	  GPIO_WritePin('A', 1, 0);
 800047e:	2200      	movs	r2, #0
 8000480:	2101      	movs	r1, #1
 8000482:	2041      	movs	r0, #65	; 0x41
 8000484:	f000 fac2 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 2, 0);
 8000488:	2200      	movs	r2, #0
 800048a:	2102      	movs	r1, #2
 800048c:	2041      	movs	r0, #65	; 0x41
 800048e:	f000 fabd 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 5, 0);
 8000492:	2200      	movs	r2, #0
 8000494:	2105      	movs	r1, #5
 8000496:	2041      	movs	r0, #65	; 0x41
 8000498:	f000 fab8 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 6, 0);
 800049c:	2200      	movs	r2, #0
 800049e:	2106      	movs	r1, #6
 80004a0:	2041      	movs	r0, #65	; 0x41
 80004a2:	f000 fab3 	bl	8000a0c <GPIO_WritePin>
	  //delay
	  for (int i = 0; i < 1000000; i++)
 80004a6:	2300      	movs	r3, #0
 80004a8:	633b      	str	r3, [r7, #48]	; 0x30
 80004aa:	e002      	b.n	80004b2 <main+0x2de>
 80004ac:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80004ae:	3301      	adds	r3, #1
 80004b0:	633b      	str	r3, [r7, #48]	; 0x30
 80004b2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80004b4:	4a34      	ldr	r2, [pc, #208]	; (8000588 <main+0x3b4>)
 80004b6:	4293      	cmp	r3, r2
 80004b8:	ddf8      	ble.n	80004ac <main+0x2d8>
	  {
	  }

	  GPIO_WritePin('A', 0, 1);
 80004ba:	2201      	movs	r2, #1
 80004bc:	2100      	movs	r1, #0
 80004be:	2041      	movs	r0, #65	; 0x41
 80004c0:	f000 faa4 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 2, 1);
 80004c4:	2201      	movs	r2, #1
 80004c6:	2102      	movs	r1, #2
 80004c8:	2041      	movs	r0, #65	; 0x41
 80004ca:	f000 fa9f 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 3, 1);
 80004ce:	2201      	movs	r2, #1
 80004d0:	2103      	movs	r1, #3
 80004d2:	2041      	movs	r0, #65	; 0x41
 80004d4:	f000 fa9a 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 5, 1);
 80004d8:	2201      	movs	r2, #1
 80004da:	2105      	movs	r1, #5
 80004dc:	2041      	movs	r0, #65	; 0x41
 80004de:	f000 fa95 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 6, 1);
 80004e2:	2201      	movs	r2, #1
 80004e4:	2106      	movs	r1, #6
 80004e6:	2041      	movs	r0, #65	; 0x41
 80004e8:	f000 fa90 	bl	8000a0c <GPIO_WritePin>

	  //delay
	  for (int i = 0; i < 1000000; i++)
 80004ec:	2300      	movs	r3, #0
 80004ee:	62fb      	str	r3, [r7, #44]	; 0x2c
 80004f0:	e002      	b.n	80004f8 <main+0x324>
 80004f2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80004f4:	3301      	adds	r3, #1
 80004f6:	62fb      	str	r3, [r7, #44]	; 0x2c
 80004f8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80004fa:	4a23      	ldr	r2, [pc, #140]	; (8000588 <main+0x3b4>)
 80004fc:	4293      	cmp	r3, r2
 80004fe:	ddf8      	ble.n	80004f2 <main+0x31e>
	  {
	  }
	  //led of
	  GPIO_WritePin('A', 0, 0);
 8000500:	2200      	movs	r2, #0
 8000502:	2100      	movs	r1, #0
 8000504:	2041      	movs	r0, #65	; 0x41
 8000506:	f000 fa81 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 2, 0);
 800050a:	2200      	movs	r2, #0
 800050c:	2102      	movs	r1, #2
 800050e:	2041      	movs	r0, #65	; 0x41
 8000510:	f000 fa7c 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 3, 0);
 8000514:	2200      	movs	r2, #0
 8000516:	2103      	movs	r1, #3
 8000518:	2041      	movs	r0, #65	; 0x41
 800051a:	f000 fa77 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 5, 0);
 800051e:	2200      	movs	r2, #0
 8000520:	2105      	movs	r1, #5
 8000522:	2041      	movs	r0, #65	; 0x41
 8000524:	f000 fa72 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 6, 0);
 8000528:	2200      	movs	r2, #0
 800052a:	2106      	movs	r1, #6
 800052c:	2041      	movs	r0, #65	; 0x41
 800052e:	f000 fa6d 	bl	8000a0c <GPIO_WritePin>
	  //delay
	  for (int i = 0; i < 1000000; i++)
 8000532:	2300      	movs	r3, #0
 8000534:	62bb      	str	r3, [r7, #40]	; 0x28
 8000536:	e002      	b.n	800053e <main+0x36a>
 8000538:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800053a:	3301      	adds	r3, #1
 800053c:	62bb      	str	r3, [r7, #40]	; 0x28
 800053e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8000540:	4a11      	ldr	r2, [pc, #68]	; (8000588 <main+0x3b4>)
 8000542:	4293      	cmp	r3, r2
 8000544:	ddf8      	ble.n	8000538 <main+0x364>
	  {
	  }
	  GPIO_WritePin('A', 0, 1);
 8000546:	2201      	movs	r2, #1
 8000548:	2100      	movs	r1, #0
 800054a:	2041      	movs	r0, #65	; 0x41
 800054c:	f000 fa5e 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 2, 1);
 8000550:	2201      	movs	r2, #1
 8000552:	2102      	movs	r1, #2
 8000554:	2041      	movs	r0, #65	; 0x41
 8000556:	f000 fa59 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 3, 1);
 800055a:	2201      	movs	r2, #1
 800055c:	2103      	movs	r1, #3
 800055e:	2041      	movs	r0, #65	; 0x41
 8000560:	f000 fa54 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 4, 1);
 8000564:	2201      	movs	r2, #1
 8000566:	2104      	movs	r1, #4
 8000568:	2041      	movs	r0, #65	; 0x41
 800056a:	f000 fa4f 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 5, 1);
 800056e:	2201      	movs	r2, #1
 8000570:	2105      	movs	r1, #5
 8000572:	2041      	movs	r0, #65	; 0x41
 8000574:	f000 fa4a 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 6, 1);
 8000578:	2201      	movs	r2, #1
 800057a:	2106      	movs	r1, #6
 800057c:	2041      	movs	r0, #65	; 0x41
 800057e:	f000 fa45 	bl	8000a0c <GPIO_WritePin>

	  //delay
	  for (int i = 0; i < 1000000; i++)
 8000582:	2300      	movs	r3, #0
 8000584:	627b      	str	r3, [r7, #36]	; 0x24
 8000586:	e004      	b.n	8000592 <main+0x3be>
 8000588:	000f423f 	.word	0x000f423f
 800058c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800058e:	3301      	adds	r3, #1
 8000590:	627b      	str	r3, [r7, #36]	; 0x24
 8000592:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000594:	4a8d      	ldr	r2, [pc, #564]	; (80007cc <main+0x5f8>)
 8000596:	4293      	cmp	r3, r2
 8000598:	ddf8      	ble.n	800058c <main+0x3b8>
	  {
	  }
	  //led of
	  GPIO_WritePin('A', 0, 0);
 800059a:	2200      	movs	r2, #0
 800059c:	2100      	movs	r1, #0
 800059e:	2041      	movs	r0, #65	; 0x41
 80005a0:	f000 fa34 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 2, 0);
 80005a4:	2200      	movs	r2, #0
 80005a6:	2102      	movs	r1, #2
 80005a8:	2041      	movs	r0, #65	; 0x41
 80005aa:	f000 fa2f 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 3, 0);
 80005ae:	2200      	movs	r2, #0
 80005b0:	2103      	movs	r1, #3
 80005b2:	2041      	movs	r0, #65	; 0x41
 80005b4:	f000 fa2a 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 4, 0);
 80005b8:	2200      	movs	r2, #0
 80005ba:	2104      	movs	r1, #4
 80005bc:	2041      	movs	r0, #65	; 0x41
 80005be:	f000 fa25 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 5, 0);
 80005c2:	2200      	movs	r2, #0
 80005c4:	2105      	movs	r1, #5
 80005c6:	2041      	movs	r0, #65	; 0x41
 80005c8:	f000 fa20 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 6, 0);
 80005cc:	2200      	movs	r2, #0
 80005ce:	2106      	movs	r1, #6
 80005d0:	2041      	movs	r0, #65	; 0x41
 80005d2:	f000 fa1b 	bl	8000a0c <GPIO_WritePin>
	  //delay
	  for (int i = 0; i < 1000000; i++)
 80005d6:	2300      	movs	r3, #0
 80005d8:	623b      	str	r3, [r7, #32]
 80005da:	e002      	b.n	80005e2 <main+0x40e>
 80005dc:	6a3b      	ldr	r3, [r7, #32]
 80005de:	3301      	adds	r3, #1
 80005e0:	623b      	str	r3, [r7, #32]
 80005e2:	6a3b      	ldr	r3, [r7, #32]
 80005e4:	4a79      	ldr	r2, [pc, #484]	; (80007cc <main+0x5f8>)
 80005e6:	4293      	cmp	r3, r2
 80005e8:	ddf8      	ble.n	80005dc <main+0x408>
	  {
	  }
	  GPIO_WritePin('A', 0, 1);
 80005ea:	2201      	movs	r2, #1
 80005ec:	2100      	movs	r1, #0
 80005ee:	2041      	movs	r0, #65	; 0x41
 80005f0:	f000 fa0c 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 1, 1);
 80005f4:	2201      	movs	r2, #1
 80005f6:	2101      	movs	r1, #1
 80005f8:	2041      	movs	r0, #65	; 0x41
 80005fa:	f000 fa07 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 2, 1);
 80005fe:	2201      	movs	r2, #1
 8000600:	2102      	movs	r1, #2
 8000602:	2041      	movs	r0, #65	; 0x41
 8000604:	f000 fa02 	bl	8000a0c <GPIO_WritePin>


	  //delay
	  for (int i = 0; i < 1000000; i++)
 8000608:	2300      	movs	r3, #0
 800060a:	61fb      	str	r3, [r7, #28]
 800060c:	e002      	b.n	8000614 <main+0x440>
 800060e:	69fb      	ldr	r3, [r7, #28]
 8000610:	3301      	adds	r3, #1
 8000612:	61fb      	str	r3, [r7, #28]
 8000614:	69fb      	ldr	r3, [r7, #28]
 8000616:	4a6d      	ldr	r2, [pc, #436]	; (80007cc <main+0x5f8>)
 8000618:	4293      	cmp	r3, r2
 800061a:	ddf8      	ble.n	800060e <main+0x43a>
	  {
	  }
	  //led of
	  GPIO_WritePin('A', 0, 0);
 800061c:	2200      	movs	r2, #0
 800061e:	2100      	movs	r1, #0
 8000620:	2041      	movs	r0, #65	; 0x41
 8000622:	f000 f9f3 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 1, 0);
 8000626:	2200      	movs	r2, #0
 8000628:	2101      	movs	r1, #1
 800062a:	2041      	movs	r0, #65	; 0x41
 800062c:	f000 f9ee 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 2, 0);
 8000630:	2200      	movs	r2, #0
 8000632:	2102      	movs	r1, #2
 8000634:	2041      	movs	r0, #65	; 0x41
 8000636:	f000 f9e9 	bl	8000a0c <GPIO_WritePin>

	  for (int i = 0; i < 1000000; i++)
 800063a:	2300      	movs	r3, #0
 800063c:	61bb      	str	r3, [r7, #24]
 800063e:	e002      	b.n	8000646 <main+0x472>
 8000640:	69bb      	ldr	r3, [r7, #24]
 8000642:	3301      	adds	r3, #1
 8000644:	61bb      	str	r3, [r7, #24]
 8000646:	69bb      	ldr	r3, [r7, #24]
 8000648:	4a60      	ldr	r2, [pc, #384]	; (80007cc <main+0x5f8>)
 800064a:	4293      	cmp	r3, r2
 800064c:	ddf8      	ble.n	8000640 <main+0x46c>
	  {
	  }
	  GPIO_WritePin('A', 0, 1);
 800064e:	2201      	movs	r2, #1
 8000650:	2100      	movs	r1, #0
 8000652:	2041      	movs	r0, #65	; 0x41
 8000654:	f000 f9da 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 1, 1);
 8000658:	2201      	movs	r2, #1
 800065a:	2101      	movs	r1, #1
 800065c:	2041      	movs	r0, #65	; 0x41
 800065e:	f000 f9d5 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 2, 1);
 8000662:	2201      	movs	r2, #1
 8000664:	2102      	movs	r1, #2
 8000666:	2041      	movs	r0, #65	; 0x41
 8000668:	f000 f9d0 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 3, 1);
 800066c:	2201      	movs	r2, #1
 800066e:	2103      	movs	r1, #3
 8000670:	2041      	movs	r0, #65	; 0x41
 8000672:	f000 f9cb 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 4, 1);
 8000676:	2201      	movs	r2, #1
 8000678:	2104      	movs	r1, #4
 800067a:	2041      	movs	r0, #65	; 0x41
 800067c:	f000 f9c6 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 5, 1);
 8000680:	2201      	movs	r2, #1
 8000682:	2105      	movs	r1, #5
 8000684:	2041      	movs	r0, #65	; 0x41
 8000686:	f000 f9c1 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 6, 1);
 800068a:	2201      	movs	r2, #1
 800068c:	2106      	movs	r1, #6
 800068e:	2041      	movs	r0, #65	; 0x41
 8000690:	f000 f9bc 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 7, 1);
 8000694:	2201      	movs	r2, #1
 8000696:	2107      	movs	r1, #7
 8000698:	2041      	movs	r0, #65	; 0x41
 800069a:	f000 f9b7 	bl	8000a0c <GPIO_WritePin>

	  //delay
	  for (int i = 0; i < 1000000; i++)
 800069e:	2300      	movs	r3, #0
 80006a0:	617b      	str	r3, [r7, #20]
 80006a2:	e002      	b.n	80006aa <main+0x4d6>
 80006a4:	697b      	ldr	r3, [r7, #20]
 80006a6:	3301      	adds	r3, #1
 80006a8:	617b      	str	r3, [r7, #20]
 80006aa:	697b      	ldr	r3, [r7, #20]
 80006ac:	4a47      	ldr	r2, [pc, #284]	; (80007cc <main+0x5f8>)
 80006ae:	4293      	cmp	r3, r2
 80006b0:	ddf8      	ble.n	80006a4 <main+0x4d0>
	  {
	  }
	  //led of
	  GPIO_WritePin('A', 0, 0);
 80006b2:	2200      	movs	r2, #0
 80006b4:	2100      	movs	r1, #0
 80006b6:	2041      	movs	r0, #65	; 0x41
 80006b8:	f000 f9a8 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 1, 0);
 80006bc:	2200      	movs	r2, #0
 80006be:	2101      	movs	r1, #1
 80006c0:	2041      	movs	r0, #65	; 0x41
 80006c2:	f000 f9a3 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 2, 0);
 80006c6:	2200      	movs	r2, #0
 80006c8:	2102      	movs	r1, #2
 80006ca:	2041      	movs	r0, #65	; 0x41
 80006cc:	f000 f99e 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 3, 0);
 80006d0:	2200      	movs	r2, #0
 80006d2:	2103      	movs	r1, #3
 80006d4:	2041      	movs	r0, #65	; 0x41
 80006d6:	f000 f999 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 4, 0);
 80006da:	2200      	movs	r2, #0
 80006dc:	2104      	movs	r1, #4
 80006de:	2041      	movs	r0, #65	; 0x41
 80006e0:	f000 f994 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 5, 0);
 80006e4:	2200      	movs	r2, #0
 80006e6:	2105      	movs	r1, #5
 80006e8:	2041      	movs	r0, #65	; 0x41
 80006ea:	f000 f98f 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 6, 0);
 80006ee:	2200      	movs	r2, #0
 80006f0:	2106      	movs	r1, #6
 80006f2:	2041      	movs	r0, #65	; 0x41
 80006f4:	f000 f98a 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 7, 0);
 80006f8:	2200      	movs	r2, #0
 80006fa:	2107      	movs	r1, #7
 80006fc:	2041      	movs	r0, #65	; 0x41
 80006fe:	f000 f985 	bl	8000a0c <GPIO_WritePin>
	  //delay
	  for (int i = 0; i < 1000000; i++)
 8000702:	2300      	movs	r3, #0
 8000704:	613b      	str	r3, [r7, #16]
 8000706:	e002      	b.n	800070e <main+0x53a>
 8000708:	693b      	ldr	r3, [r7, #16]
 800070a:	3301      	adds	r3, #1
 800070c:	613b      	str	r3, [r7, #16]
 800070e:	693b      	ldr	r3, [r7, #16]
 8000710:	4a2e      	ldr	r2, [pc, #184]	; (80007cc <main+0x5f8>)
 8000712:	4293      	cmp	r3, r2
 8000714:	ddf8      	ble.n	8000708 <main+0x534>
	  {
	  }
	  for (int i = 0; i < 1000000; i++)
 8000716:	2300      	movs	r3, #0
 8000718:	60fb      	str	r3, [r7, #12]
 800071a:	e002      	b.n	8000722 <main+0x54e>
 800071c:	68fb      	ldr	r3, [r7, #12]
 800071e:	3301      	adds	r3, #1
 8000720:	60fb      	str	r3, [r7, #12]
 8000722:	68fb      	ldr	r3, [r7, #12]
 8000724:	4a29      	ldr	r2, [pc, #164]	; (80007cc <main+0x5f8>)
 8000726:	4293      	cmp	r3, r2
 8000728:	ddf8      	ble.n	800071c <main+0x548>
	  {
	  }
	  GPIO_WritePin('A', 0, 1);
 800072a:	2201      	movs	r2, #1
 800072c:	2100      	movs	r1, #0
 800072e:	2041      	movs	r0, #65	; 0x41
 8000730:	f000 f96c 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 1, 1);
 8000734:	2201      	movs	r2, #1
 8000736:	2101      	movs	r1, #1
 8000738:	2041      	movs	r0, #65	; 0x41
 800073a:	f000 f967 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 2, 1);
 800073e:	2201      	movs	r2, #1
 8000740:	2102      	movs	r1, #2
 8000742:	2041      	movs	r0, #65	; 0x41
 8000744:	f000 f962 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 3, 1);
 8000748:	2201      	movs	r2, #1
 800074a:	2103      	movs	r1, #3
 800074c:	2041      	movs	r0, #65	; 0x41
 800074e:	f000 f95d 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 5, 1);
 8000752:	2201      	movs	r2, #1
 8000754:	2105      	movs	r1, #5
 8000756:	2041      	movs	r0, #65	; 0x41
 8000758:	f000 f958 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 6, 1);
 800075c:	2201      	movs	r2, #1
 800075e:	2106      	movs	r1, #6
 8000760:	2041      	movs	r0, #65	; 0x41
 8000762:	f000 f953 	bl	8000a0c <GPIO_WritePin>

	  //delay
	  for (int i = 0; i < 1000000; i++)
 8000766:	2300      	movs	r3, #0
 8000768:	60bb      	str	r3, [r7, #8]
 800076a:	e002      	b.n	8000772 <main+0x59e>
 800076c:	68bb      	ldr	r3, [r7, #8]
 800076e:	3301      	adds	r3, #1
 8000770:	60bb      	str	r3, [r7, #8]
 8000772:	68bb      	ldr	r3, [r7, #8]
 8000774:	4a15      	ldr	r2, [pc, #84]	; (80007cc <main+0x5f8>)
 8000776:	4293      	cmp	r3, r2
 8000778:	ddf8      	ble.n	800076c <main+0x598>
	  {
	  }
	  //led of
	  GPIO_WritePin('A', 0, 0);
 800077a:	2200      	movs	r2, #0
 800077c:	2100      	movs	r1, #0
 800077e:	2041      	movs	r0, #65	; 0x41
 8000780:	f000 f944 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 1, 0);
 8000784:	2200      	movs	r2, #0
 8000786:	2101      	movs	r1, #1
 8000788:	2041      	movs	r0, #65	; 0x41
 800078a:	f000 f93f 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 2, 0);
 800078e:	2200      	movs	r2, #0
 8000790:	2102      	movs	r1, #2
 8000792:	2041      	movs	r0, #65	; 0x41
 8000794:	f000 f93a 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 3, 0);
 8000798:	2200      	movs	r2, #0
 800079a:	2103      	movs	r1, #3
 800079c:	2041      	movs	r0, #65	; 0x41
 800079e:	f000 f935 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 5, 0);
 80007a2:	2200      	movs	r2, #0
 80007a4:	2105      	movs	r1, #5
 80007a6:	2041      	movs	r0, #65	; 0x41
 80007a8:	f000 f930 	bl	8000a0c <GPIO_WritePin>
	  GPIO_WritePin('A', 6, 0);
 80007ac:	2200      	movs	r2, #0
 80007ae:	2106      	movs	r1, #6
 80007b0:	2041      	movs	r0, #65	; 0x41
 80007b2:	f000 f92b 	bl	8000a0c <GPIO_WritePin>
	  //delay
	  for (int i = 0; i < 1000000; i++)
 80007b6:	2300      	movs	r3, #0
 80007b8:	607b      	str	r3, [r7, #4]
 80007ba:	e002      	b.n	80007c2 <main+0x5ee>
 80007bc:	687b      	ldr	r3, [r7, #4]
 80007be:	3301      	adds	r3, #1
 80007c0:	607b      	str	r3, [r7, #4]
 80007c2:	687b      	ldr	r3, [r7, #4]
 80007c4:	4a01      	ldr	r2, [pc, #4]	; (80007cc <main+0x5f8>)
 80007c6:	4293      	cmp	r3, r2
 80007c8:	ddf8      	ble.n	80007bc <main+0x5e8>
	  GPIO_WritePin('A', 0, 1);
 80007ca:	e536      	b.n	800023a <main+0x66>
 80007cc:	000f423f 	.word	0x000f423f

080007d0 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80007d0:	b480      	push	{r7}
 80007d2:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80007d4:	4b06      	ldr	r3, [pc, #24]	; (80007f0 <SystemInit+0x20>)
 80007d6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80007da:	4a05      	ldr	r2, [pc, #20]	; (80007f0 <SystemInit+0x20>)
 80007dc:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80007e0:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80007e4:	bf00      	nop
 80007e6:	46bd      	mov	sp, r7
 80007e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007ec:	4770      	bx	lr
 80007ee:	bf00      	nop
 80007f0:	e000ed00 	.word	0xe000ed00

080007f4 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 80007f4:	f8df d034 	ldr.w	sp, [pc, #52]	; 800082c <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 80007f8:	480d      	ldr	r0, [pc, #52]	; (8000830 <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 80007fa:	490e      	ldr	r1, [pc, #56]	; (8000834 <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 80007fc:	4a0e      	ldr	r2, [pc, #56]	; (8000838 <LoopFillZerobss+0x1e>)
  movs r3, #0
 80007fe:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000800:	e002      	b.n	8000808 <LoopCopyDataInit>

08000802 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000802:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000804:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000806:	3304      	adds	r3, #4

08000808 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000808:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800080a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800080c:	d3f9      	bcc.n	8000802 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800080e:	4a0b      	ldr	r2, [pc, #44]	; (800083c <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 8000810:	4c0b      	ldr	r4, [pc, #44]	; (8000840 <LoopFillZerobss+0x26>)
  movs r3, #0
 8000812:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000814:	e001      	b.n	800081a <LoopFillZerobss>

08000816 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000816:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000818:	3204      	adds	r2, #4

0800081a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800081a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800081c:	d3fb      	bcc.n	8000816 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 800081e:	f7ff ffd7 	bl	80007d0 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000822:	f000 f965 	bl	8000af0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000826:	f7ff fcd5 	bl	80001d4 <main>
  bx  lr    
 800082a:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 800082c:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 8000830:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000834:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000838:	08000b58 	.word	0x08000b58
  ldr r2, =_sbss
 800083c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000840:	2000001c 	.word	0x2000001c

08000844 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000844:	e7fe      	b.n	8000844 <ADC_IRQHandler>
	...

08000848 <GPIO_Init>:
 */
#include "GPIO.h"
#include "stm32f401xc.h"
#include "stm32f401cc_interface.h"
void GPIO_Init( char Port, unsigned int PIN_NO, unsigned int PIN_Dir, unsigned int Default_State)
{
 8000848:	b480      	push	{r7}
 800084a:	b085      	sub	sp, #20
 800084c:	af00      	add	r7, sp, #0
 800084e:	60b9      	str	r1, [r7, #8]
 8000850:	607a      	str	r2, [r7, #4]
 8000852:	603b      	str	r3, [r7, #0]
 8000854:	4603      	mov	r3, r0
 8000856:	73fb      	strb	r3, [r7, #15]
	//enable clock of port
	switch (Port)
 8000858:	7bfb      	ldrb	r3, [r7, #15]
 800085a:	2b41      	cmp	r3, #65	; 0x41
 800085c:	d002      	beq.n	8000864 <GPIO_Init+0x1c>
 800085e:	2b42      	cmp	r3, #66	; 0x42
 8000860:	d064      	beq.n	800092c <GPIO_Init+0xe4>
					break;
				}//end switch
		break;
	}

}
 8000862:	e0c7      	b.n	80009f4 <GPIO_Init+0x1ac>
				RCC_AHB1ENR |= (0x01 <<0);
 8000864:	4b66      	ldr	r3, [pc, #408]	; (8000a00 <GPIO_Init+0x1b8>)
 8000866:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000868:	4a65      	ldr	r2, [pc, #404]	; (8000a00 <GPIO_Init+0x1b8>)
 800086a:	f043 0301 	orr.w	r3, r3, #1
 800086e:	6313      	str	r3, [r2, #48]	; 0x30
 8000870:	687b      	ldr	r3, [r7, #4]
 8000872:	2b03      	cmp	r3, #3
 8000874:	d83b      	bhi.n	80008ee <GPIO_Init+0xa6>
 8000876:	a201      	add	r2, pc, #4	; (adr r2, 800087c <GPIO_Init+0x34>)
 8000878:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800087c:	0800088d 	.word	0x0800088d
 8000880:	080008a7 	.word	0x080008a7
 8000884:	080008bf 	.word	0x080008bf
 8000888:	080008d7 	.word	0x080008d7
							GPIOA_MODER &= ~(0x03 << 2*PIN_NO);
 800088c:	4b5d      	ldr	r3, [pc, #372]	; (8000a04 <GPIO_Init+0x1bc>)
 800088e:	681b      	ldr	r3, [r3, #0]
 8000890:	68ba      	ldr	r2, [r7, #8]
 8000892:	0052      	lsls	r2, r2, #1
 8000894:	2103      	movs	r1, #3
 8000896:	fa01 f202 	lsl.w	r2, r1, r2
 800089a:	43d2      	mvns	r2, r2
 800089c:	4611      	mov	r1, r2
 800089e:	4a59      	ldr	r2, [pc, #356]	; (8000a04 <GPIO_Init+0x1bc>)
 80008a0:	400b      	ands	r3, r1
 80008a2:	6013      	str	r3, [r2, #0]
					break;
 80008a4:	e023      	b.n	80008ee <GPIO_Init+0xa6>
							GPIOA_MODER |= (0x01 << 2*PIN_NO);
 80008a6:	4b57      	ldr	r3, [pc, #348]	; (8000a04 <GPIO_Init+0x1bc>)
 80008a8:	681b      	ldr	r3, [r3, #0]
 80008aa:	68ba      	ldr	r2, [r7, #8]
 80008ac:	0052      	lsls	r2, r2, #1
 80008ae:	2101      	movs	r1, #1
 80008b0:	fa01 f202 	lsl.w	r2, r1, r2
 80008b4:	4611      	mov	r1, r2
 80008b6:	4a53      	ldr	r2, [pc, #332]	; (8000a04 <GPIO_Init+0x1bc>)
 80008b8:	430b      	orrs	r3, r1
 80008ba:	6013      	str	r3, [r2, #0]
					break;
 80008bc:	e017      	b.n	80008ee <GPIO_Init+0xa6>
							GPIOA_MODER |= (0x02 << 2*PIN_NO);
 80008be:	4b51      	ldr	r3, [pc, #324]	; (8000a04 <GPIO_Init+0x1bc>)
 80008c0:	681b      	ldr	r3, [r3, #0]
 80008c2:	68ba      	ldr	r2, [r7, #8]
 80008c4:	0052      	lsls	r2, r2, #1
 80008c6:	2102      	movs	r1, #2
 80008c8:	fa01 f202 	lsl.w	r2, r1, r2
 80008cc:	4611      	mov	r1, r2
 80008ce:	4a4d      	ldr	r2, [pc, #308]	; (8000a04 <GPIO_Init+0x1bc>)
 80008d0:	430b      	orrs	r3, r1
 80008d2:	6013      	str	r3, [r2, #0]
					break;
 80008d4:	e00b      	b.n	80008ee <GPIO_Init+0xa6>
							GPIOA_MODER |= (0x03 << 2*PIN_NO);
 80008d6:	4b4b      	ldr	r3, [pc, #300]	; (8000a04 <GPIO_Init+0x1bc>)
 80008d8:	681b      	ldr	r3, [r3, #0]
 80008da:	68ba      	ldr	r2, [r7, #8]
 80008dc:	0052      	lsls	r2, r2, #1
 80008de:	2103      	movs	r1, #3
 80008e0:	fa01 f202 	lsl.w	r2, r1, r2
 80008e4:	4611      	mov	r1, r2
 80008e6:	4a47      	ldr	r2, [pc, #284]	; (8000a04 <GPIO_Init+0x1bc>)
 80008e8:	430b      	orrs	r3, r1
 80008ea:	6013      	str	r3, [r2, #0]
					break;
 80008ec:	bf00      	nop
 80008ee:	683b      	ldr	r3, [r7, #0]
 80008f0:	2b00      	cmp	r3, #0
 80008f2:	d003      	beq.n	80008fc <GPIO_Init+0xb4>
 80008f4:	683b      	ldr	r3, [r7, #0]
 80008f6:	2b01      	cmp	r3, #1
 80008f8:	d00c      	beq.n	8000914 <GPIO_Init+0xcc>
		break;
 80008fa:	e07b      	b.n	80009f4 <GPIO_Init+0x1ac>
							GPIOA_OTYPER &= ~(0x01<<PIN_NO);
 80008fc:	4b41      	ldr	r3, [pc, #260]	; (8000a04 <GPIO_Init+0x1bc>)
 80008fe:	685b      	ldr	r3, [r3, #4]
 8000900:	2101      	movs	r1, #1
 8000902:	68ba      	ldr	r2, [r7, #8]
 8000904:	fa01 f202 	lsl.w	r2, r1, r2
 8000908:	43d2      	mvns	r2, r2
 800090a:	4611      	mov	r1, r2
 800090c:	4a3d      	ldr	r2, [pc, #244]	; (8000a04 <GPIO_Init+0x1bc>)
 800090e:	400b      	ands	r3, r1
 8000910:	6053      	str	r3, [r2, #4]
					break;
 8000912:	e00a      	b.n	800092a <GPIO_Init+0xe2>
							GPIOA_OTYPER |= (0x01<<PIN_NO);
 8000914:	4b3b      	ldr	r3, [pc, #236]	; (8000a04 <GPIO_Init+0x1bc>)
 8000916:	685b      	ldr	r3, [r3, #4]
 8000918:	2101      	movs	r1, #1
 800091a:	68ba      	ldr	r2, [r7, #8]
 800091c:	fa01 f202 	lsl.w	r2, r1, r2
 8000920:	4611      	mov	r1, r2
 8000922:	4a38      	ldr	r2, [pc, #224]	; (8000a04 <GPIO_Init+0x1bc>)
 8000924:	430b      	orrs	r3, r1
 8000926:	6053      	str	r3, [r2, #4]
					break;
 8000928:	bf00      	nop
		break;
 800092a:	e063      	b.n	80009f4 <GPIO_Init+0x1ac>
				RCC_AHB1ENR |= (0x01 <<1);
 800092c:	4b34      	ldr	r3, [pc, #208]	; (8000a00 <GPIO_Init+0x1b8>)
 800092e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000930:	4a33      	ldr	r2, [pc, #204]	; (8000a00 <GPIO_Init+0x1b8>)
 8000932:	f043 0302 	orr.w	r3, r3, #2
 8000936:	6313      	str	r3, [r2, #48]	; 0x30
 8000938:	687b      	ldr	r3, [r7, #4]
 800093a:	2b03      	cmp	r3, #3
 800093c:	d83b      	bhi.n	80009b6 <GPIO_Init+0x16e>
 800093e:	a201      	add	r2, pc, #4	; (adr r2, 8000944 <GPIO_Init+0xfc>)
 8000940:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000944:	08000955 	.word	0x08000955
 8000948:	0800096f 	.word	0x0800096f
 800094c:	08000987 	.word	0x08000987
 8000950:	0800099f 	.word	0x0800099f
							GPIOB_MODER &= ~(0x03 << 2*PIN_NO);
 8000954:	4b2c      	ldr	r3, [pc, #176]	; (8000a08 <GPIO_Init+0x1c0>)
 8000956:	681b      	ldr	r3, [r3, #0]
 8000958:	68ba      	ldr	r2, [r7, #8]
 800095a:	0052      	lsls	r2, r2, #1
 800095c:	2103      	movs	r1, #3
 800095e:	fa01 f202 	lsl.w	r2, r1, r2
 8000962:	43d2      	mvns	r2, r2
 8000964:	4611      	mov	r1, r2
 8000966:	4a28      	ldr	r2, [pc, #160]	; (8000a08 <GPIO_Init+0x1c0>)
 8000968:	400b      	ands	r3, r1
 800096a:	6013      	str	r3, [r2, #0]
					break;
 800096c:	e023      	b.n	80009b6 <GPIO_Init+0x16e>
							GPIOB_MODER |= (0x01 << 2*PIN_NO);
 800096e:	4b26      	ldr	r3, [pc, #152]	; (8000a08 <GPIO_Init+0x1c0>)
 8000970:	681b      	ldr	r3, [r3, #0]
 8000972:	68ba      	ldr	r2, [r7, #8]
 8000974:	0052      	lsls	r2, r2, #1
 8000976:	2101      	movs	r1, #1
 8000978:	fa01 f202 	lsl.w	r2, r1, r2
 800097c:	4611      	mov	r1, r2
 800097e:	4a22      	ldr	r2, [pc, #136]	; (8000a08 <GPIO_Init+0x1c0>)
 8000980:	430b      	orrs	r3, r1
 8000982:	6013      	str	r3, [r2, #0]
					break;
 8000984:	e017      	b.n	80009b6 <GPIO_Init+0x16e>
							GPIOB_MODER |= (0x02 << 2*PIN_NO);
 8000986:	4b20      	ldr	r3, [pc, #128]	; (8000a08 <GPIO_Init+0x1c0>)
 8000988:	681b      	ldr	r3, [r3, #0]
 800098a:	68ba      	ldr	r2, [r7, #8]
 800098c:	0052      	lsls	r2, r2, #1
 800098e:	2102      	movs	r1, #2
 8000990:	fa01 f202 	lsl.w	r2, r1, r2
 8000994:	4611      	mov	r1, r2
 8000996:	4a1c      	ldr	r2, [pc, #112]	; (8000a08 <GPIO_Init+0x1c0>)
 8000998:	430b      	orrs	r3, r1
 800099a:	6013      	str	r3, [r2, #0]
					break;
 800099c:	e00b      	b.n	80009b6 <GPIO_Init+0x16e>
							GPIOB_MODER |= (0x03 << 2*PIN_NO);
 800099e:	4b1a      	ldr	r3, [pc, #104]	; (8000a08 <GPIO_Init+0x1c0>)
 80009a0:	681b      	ldr	r3, [r3, #0]
 80009a2:	68ba      	ldr	r2, [r7, #8]
 80009a4:	0052      	lsls	r2, r2, #1
 80009a6:	2103      	movs	r1, #3
 80009a8:	fa01 f202 	lsl.w	r2, r1, r2
 80009ac:	4611      	mov	r1, r2
 80009ae:	4a16      	ldr	r2, [pc, #88]	; (8000a08 <GPIO_Init+0x1c0>)
 80009b0:	430b      	orrs	r3, r1
 80009b2:	6013      	str	r3, [r2, #0]
					break;
 80009b4:	bf00      	nop
 80009b6:	683b      	ldr	r3, [r7, #0]
 80009b8:	2b00      	cmp	r3, #0
 80009ba:	d003      	beq.n	80009c4 <GPIO_Init+0x17c>
 80009bc:	683b      	ldr	r3, [r7, #0]
 80009be:	2b01      	cmp	r3, #1
 80009c0:	d00c      	beq.n	80009dc <GPIO_Init+0x194>
		break;
 80009c2:	e016      	b.n	80009f2 <GPIO_Init+0x1aa>
							GPIOB_OTYPER &= ~(0x01<<PIN_NO);
 80009c4:	4b10      	ldr	r3, [pc, #64]	; (8000a08 <GPIO_Init+0x1c0>)
 80009c6:	685b      	ldr	r3, [r3, #4]
 80009c8:	2101      	movs	r1, #1
 80009ca:	68ba      	ldr	r2, [r7, #8]
 80009cc:	fa01 f202 	lsl.w	r2, r1, r2
 80009d0:	43d2      	mvns	r2, r2
 80009d2:	4611      	mov	r1, r2
 80009d4:	4a0c      	ldr	r2, [pc, #48]	; (8000a08 <GPIO_Init+0x1c0>)
 80009d6:	400b      	ands	r3, r1
 80009d8:	6053      	str	r3, [r2, #4]
					break;
 80009da:	e00a      	b.n	80009f2 <GPIO_Init+0x1aa>
							GPIOB_OTYPER |= (0x01<<PIN_NO);
 80009dc:	4b0a      	ldr	r3, [pc, #40]	; (8000a08 <GPIO_Init+0x1c0>)
 80009de:	685b      	ldr	r3, [r3, #4]
 80009e0:	2101      	movs	r1, #1
 80009e2:	68ba      	ldr	r2, [r7, #8]
 80009e4:	fa01 f202 	lsl.w	r2, r1, r2
 80009e8:	4611      	mov	r1, r2
 80009ea:	4a07      	ldr	r2, [pc, #28]	; (8000a08 <GPIO_Init+0x1c0>)
 80009ec:	430b      	orrs	r3, r1
 80009ee:	6053      	str	r3, [r2, #4]
					break;
 80009f0:	bf00      	nop
		break;
 80009f2:	bf00      	nop
}
 80009f4:	bf00      	nop
 80009f6:	3714      	adds	r7, #20
 80009f8:	46bd      	mov	sp, r7
 80009fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009fe:	4770      	bx	lr
 8000a00:	40023800 	.word	0x40023800
 8000a04:	40020000 	.word	0x40020000
 8000a08:	40020400 	.word	0x40020400

08000a0c <GPIO_WritePin>:

unsigned char GPIO_WritePin(char Port, unsigned int PIN_NO, unsigned int Data)
{
 8000a0c:	b480      	push	{r7}
 8000a0e:	b087      	sub	sp, #28
 8000a10:	af00      	add	r7, sp, #0
 8000a12:	4603      	mov	r3, r0
 8000a14:	60b9      	str	r1, [r7, #8]
 8000a16:	607a      	str	r2, [r7, #4]
 8000a18:	73fb      	strb	r3, [r7, #15]
	unsigned char result;
	switch(Port)
 8000a1a:	7bfb      	ldrb	r3, [r7, #15]
 8000a1c:	2b41      	cmp	r3, #65	; 0x41
 8000a1e:	d002      	beq.n	8000a26 <GPIO_WritePin+0x1a>
 8000a20:	2b42      	cmp	r3, #66	; 0x42
 8000a22:	d02d      	beq.n	8000a80 <GPIO_WritePin+0x74>
 8000a24:	e059      	b.n	8000ada <GPIO_WritePin+0xce>
	{
		case('A'):
		    //check if the pin is output(01=1)
			if((GPIOA_MODER & (0x03 << 2*PIN_NO)) >> (2*PIN_NO) == 1)
 8000a26:	4b30      	ldr	r3, [pc, #192]	; (8000ae8 <GPIO_WritePin+0xdc>)
 8000a28:	681b      	ldr	r3, [r3, #0]
 8000a2a:	68ba      	ldr	r2, [r7, #8]
 8000a2c:	0052      	lsls	r2, r2, #1
 8000a2e:	2103      	movs	r1, #3
 8000a30:	fa01 f202 	lsl.w	r2, r1, r2
 8000a34:	401a      	ands	r2, r3
 8000a36:	68bb      	ldr	r3, [r7, #8]
 8000a38:	005b      	lsls	r3, r3, #1
 8000a3a:	fa22 f303 	lsr.w	r3, r2, r3
 8000a3e:	2b01      	cmp	r3, #1
 8000a40:	d11b      	bne.n	8000a7a <GPIO_WritePin+0x6e>
			{
			     if(Data)
 8000a42:	687b      	ldr	r3, [r7, #4]
 8000a44:	2b00      	cmp	r3, #0
 8000a46:	d00a      	beq.n	8000a5e <GPIO_WritePin+0x52>
			     {
			    	 GPIOA_ODR |= (1<<PIN_NO);
 8000a48:	4b27      	ldr	r3, [pc, #156]	; (8000ae8 <GPIO_WritePin+0xdc>)
 8000a4a:	695b      	ldr	r3, [r3, #20]
 8000a4c:	2101      	movs	r1, #1
 8000a4e:	68ba      	ldr	r2, [r7, #8]
 8000a50:	fa01 f202 	lsl.w	r2, r1, r2
 8000a54:	4611      	mov	r1, r2
 8000a56:	4a24      	ldr	r2, [pc, #144]	; (8000ae8 <GPIO_WritePin+0xdc>)
 8000a58:	430b      	orrs	r3, r1
 8000a5a:	6153      	str	r3, [r2, #20]
 8000a5c:	e00a      	b.n	8000a74 <GPIO_WritePin+0x68>
			     }
			     else
			     {
			    	 GPIOA_ODR &= ~(1<<PIN_NO);
 8000a5e:	4b22      	ldr	r3, [pc, #136]	; (8000ae8 <GPIO_WritePin+0xdc>)
 8000a60:	695b      	ldr	r3, [r3, #20]
 8000a62:	2101      	movs	r1, #1
 8000a64:	68ba      	ldr	r2, [r7, #8]
 8000a66:	fa01 f202 	lsl.w	r2, r1, r2
 8000a6a:	43d2      	mvns	r2, r2
 8000a6c:	4611      	mov	r1, r2
 8000a6e:	4a1e      	ldr	r2, [pc, #120]	; (8000ae8 <GPIO_WritePin+0xdc>)
 8000a70:	400b      	ands	r3, r1
 8000a72:	6153      	str	r3, [r2, #20]
			     }
				result = OK;
 8000a74:	2300      	movs	r3, #0
 8000a76:	75fb      	strb	r3, [r7, #23]
			}
			else
			{
				result = NOK;
			}
		break;
 8000a78:	e02f      	b.n	8000ada <GPIO_WritePin+0xce>
				result = NOK;
 8000a7a:	2301      	movs	r3, #1
 8000a7c:	75fb      	strb	r3, [r7, #23]
		break;
 8000a7e:	e02c      	b.n	8000ada <GPIO_WritePin+0xce>
		case('B'):
				if((GPIOB_MODER & (0x01 << 2*PIN_NO))>> (2*PIN_NO))
 8000a80:	4b1a      	ldr	r3, [pc, #104]	; (8000aec <GPIO_WritePin+0xe0>)
 8000a82:	681b      	ldr	r3, [r3, #0]
 8000a84:	68ba      	ldr	r2, [r7, #8]
 8000a86:	0052      	lsls	r2, r2, #1
 8000a88:	2101      	movs	r1, #1
 8000a8a:	fa01 f202 	lsl.w	r2, r1, r2
 8000a8e:	401a      	ands	r2, r3
 8000a90:	68bb      	ldr	r3, [r7, #8]
 8000a92:	005b      	lsls	r3, r3, #1
 8000a94:	fa22 f303 	lsr.w	r3, r2, r3
 8000a98:	2b00      	cmp	r3, #0
 8000a9a:	d01b      	beq.n	8000ad4 <GPIO_WritePin+0xc8>
				{
					 if(Data)
 8000a9c:	687b      	ldr	r3, [r7, #4]
 8000a9e:	2b00      	cmp	r3, #0
 8000aa0:	d00a      	beq.n	8000ab8 <GPIO_WritePin+0xac>
					 {
						 GPIOB_ODR |= (1<<PIN_NO);
 8000aa2:	4b12      	ldr	r3, [pc, #72]	; (8000aec <GPIO_WritePin+0xe0>)
 8000aa4:	695b      	ldr	r3, [r3, #20]
 8000aa6:	2101      	movs	r1, #1
 8000aa8:	68ba      	ldr	r2, [r7, #8]
 8000aaa:	fa01 f202 	lsl.w	r2, r1, r2
 8000aae:	4611      	mov	r1, r2
 8000ab0:	4a0e      	ldr	r2, [pc, #56]	; (8000aec <GPIO_WritePin+0xe0>)
 8000ab2:	430b      	orrs	r3, r1
 8000ab4:	6153      	str	r3, [r2, #20]
 8000ab6:	e00a      	b.n	8000ace <GPIO_WritePin+0xc2>
					 }
					 else
					 {
						 GPIOB_ODR &= ~(1<<PIN_NO);
 8000ab8:	4b0c      	ldr	r3, [pc, #48]	; (8000aec <GPIO_WritePin+0xe0>)
 8000aba:	695b      	ldr	r3, [r3, #20]
 8000abc:	2101      	movs	r1, #1
 8000abe:	68ba      	ldr	r2, [r7, #8]
 8000ac0:	fa01 f202 	lsl.w	r2, r1, r2
 8000ac4:	43d2      	mvns	r2, r2
 8000ac6:	4611      	mov	r1, r2
 8000ac8:	4a08      	ldr	r2, [pc, #32]	; (8000aec <GPIO_WritePin+0xe0>)
 8000aca:	400b      	ands	r3, r1
 8000acc:	6153      	str	r3, [r2, #20]
					 }
					result = OK;
 8000ace:	2300      	movs	r3, #0
 8000ad0:	75fb      	strb	r3, [r7, #23]
				else
				{
					result = NOK;
				}

		break;
 8000ad2:	e001      	b.n	8000ad8 <GPIO_WritePin+0xcc>
					result = NOK;
 8000ad4:	2301      	movs	r3, #1
 8000ad6:	75fb      	strb	r3, [r7, #23]
		break;
 8000ad8:	bf00      	nop

	}// end switch

	return result;
 8000ada:	7dfb      	ldrb	r3, [r7, #23]
}
 8000adc:	4618      	mov	r0, r3
 8000ade:	371c      	adds	r7, #28
 8000ae0:	46bd      	mov	sp, r7
 8000ae2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ae6:	4770      	bx	lr
 8000ae8:	40020000 	.word	0x40020000
 8000aec:	40020400 	.word	0x40020400

08000af0 <__libc_init_array>:
 8000af0:	b570      	push	{r4, r5, r6, lr}
 8000af2:	4d0d      	ldr	r5, [pc, #52]	; (8000b28 <__libc_init_array+0x38>)
 8000af4:	4c0d      	ldr	r4, [pc, #52]	; (8000b2c <__libc_init_array+0x3c>)
 8000af6:	1b64      	subs	r4, r4, r5
 8000af8:	10a4      	asrs	r4, r4, #2
 8000afa:	2600      	movs	r6, #0
 8000afc:	42a6      	cmp	r6, r4
 8000afe:	d109      	bne.n	8000b14 <__libc_init_array+0x24>
 8000b00:	4d0b      	ldr	r5, [pc, #44]	; (8000b30 <__libc_init_array+0x40>)
 8000b02:	4c0c      	ldr	r4, [pc, #48]	; (8000b34 <__libc_init_array+0x44>)
 8000b04:	f000 f818 	bl	8000b38 <_init>
 8000b08:	1b64      	subs	r4, r4, r5
 8000b0a:	10a4      	asrs	r4, r4, #2
 8000b0c:	2600      	movs	r6, #0
 8000b0e:	42a6      	cmp	r6, r4
 8000b10:	d105      	bne.n	8000b1e <__libc_init_array+0x2e>
 8000b12:	bd70      	pop	{r4, r5, r6, pc}
 8000b14:	f855 3b04 	ldr.w	r3, [r5], #4
 8000b18:	4798      	blx	r3
 8000b1a:	3601      	adds	r6, #1
 8000b1c:	e7ee      	b.n	8000afc <__libc_init_array+0xc>
 8000b1e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000b22:	4798      	blx	r3
 8000b24:	3601      	adds	r6, #1
 8000b26:	e7f2      	b.n	8000b0e <__libc_init_array+0x1e>
 8000b28:	08000b50 	.word	0x08000b50
 8000b2c:	08000b50 	.word	0x08000b50
 8000b30:	08000b50 	.word	0x08000b50
 8000b34:	08000b54 	.word	0x08000b54

08000b38 <_init>:
 8000b38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b3a:	bf00      	nop
 8000b3c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000b3e:	bc08      	pop	{r3}
 8000b40:	469e      	mov	lr, r3
 8000b42:	4770      	bx	lr

08000b44 <_fini>:
 8000b44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b46:	bf00      	nop
 8000b48:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000b4a:	bc08      	pop	{r3}
 8000b4c:	469e      	mov	lr, r3
 8000b4e:	4770      	bx	lr
