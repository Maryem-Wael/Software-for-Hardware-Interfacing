
lab6.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000614  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080007a8  080007a8  00020070  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080007a8  080007a8  00020070  2**0
                  CONTENTS
  4 .ARM          00000000  080007a8  080007a8  00020070  2**0
                  CONTENTS
  5 .preinit_array 00000000  080007a8  080007a8  00020070  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080007a8  080007a8  000107a8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080007ac  080007ac  000107ac  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000070  20000000  080007b0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000020  20000070  08000820  00020070  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000090  08000820  00020090  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020070  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000abe  00000000  00000000  000200a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000408  00000000  00000000  00020b5e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000f0  00000000  00000000  00020f68  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000a8  00000000  00000000  00021058  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000de0a  00000000  00000000  00021100  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000d92  00000000  00000000  0002ef0a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0004fdbc  00000000  00000000  0002fc9c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0007fa58  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000024c  00000000  00000000  0007faac  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000070 	.word	0x20000070
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000790 	.word	0x08000790

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000074 	.word	0x20000074
 80001d0:	08000790 	.word	0x08000790

080001d4 <GPIO_EnableClock>:
		                          {GPIO_REG(GPIOB , MODER),GPIO_REG(GPIOB , OTYPER) ,GPIO_REG(GPIOB , OSPEEDR) , GPIO_REG(GPIOB , PUPDR) , GPIO_REG(GPIOB , IDR) , GPIO_REG(GPIOB , ODR) ,GPIO_REG(GPIOB , BSRR) , GPIO_REG(GPIOB , LCKR) ,GPIO_REG(GPIOB , AFRL) , GPIO_REG(GPIOB , AFRH)}};


unsigned int *lookuotable2[1]={GPIO_REG(RCC , AHB1ENR)};

void GPIO_EnableClock(unsigned char PORT_ID) {
 80001d4:	b480      	push	{r7}
 80001d6:	b083      	sub	sp, #12
 80001d8:	af00      	add	r7, sp, #0
 80001da:	4603      	mov	r3, r0
 80001dc:	71fb      	strb	r3, [r7, #7]

	*lookuotable2[0] |= (0x01 << PORT_ID);
 80001de:	4b09      	ldr	r3, [pc, #36]	; (8000204 <GPIO_EnableClock+0x30>)
 80001e0:	681b      	ldr	r3, [r3, #0]
 80001e2:	681a      	ldr	r2, [r3, #0]
 80001e4:	79fb      	ldrb	r3, [r7, #7]
 80001e6:	2101      	movs	r1, #1
 80001e8:	fa01 f303 	lsl.w	r3, r1, r3
 80001ec:	4619      	mov	r1, r3
 80001ee:	4b05      	ldr	r3, [pc, #20]	; (8000204 <GPIO_EnableClock+0x30>)
 80001f0:	681b      	ldr	r3, [r3, #0]
 80001f2:	430a      	orrs	r2, r1
 80001f4:	601a      	str	r2, [r3, #0]


}
 80001f6:	bf00      	nop
 80001f8:	370c      	adds	r7, #12
 80001fa:	46bd      	mov	sp, r7
 80001fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000200:	4770      	bx	lr
 8000202:	bf00      	nop
 8000204:	20000050 	.word	0x20000050

08000208 <GPIO_Init>:

void GPIO_Init(unsigned char PORT_ID, unsigned char PinNum, unsigned char PinMode,
               unsigned char DefaultState) {
 8000208:	b490      	push	{r4, r7}
 800020a:	b082      	sub	sp, #8
 800020c:	af00      	add	r7, sp, #0
 800020e:	4604      	mov	r4, r0
 8000210:	4608      	mov	r0, r1
 8000212:	4611      	mov	r1, r2
 8000214:	461a      	mov	r2, r3
 8000216:	4623      	mov	r3, r4
 8000218:	71fb      	strb	r3, [r7, #7]
 800021a:	4603      	mov	r3, r0
 800021c:	71bb      	strb	r3, [r7, #6]
 800021e:	460b      	mov	r3, r1
 8000220:	717b      	strb	r3, [r7, #5]
 8000222:	4613      	mov	r3, r2
 8000224:	713b      	strb	r3, [r7, #4]

      *lookuptable[PORT_ID][0] &= ~(0x03 << 2 * PinNum);
 8000226:	79fa      	ldrb	r2, [r7, #7]
 8000228:	4956      	ldr	r1, [pc, #344]	; (8000384 <GPIO_Init+0x17c>)
 800022a:	4613      	mov	r3, r2
 800022c:	009b      	lsls	r3, r3, #2
 800022e:	4413      	add	r3, r2
 8000230:	00db      	lsls	r3, r3, #3
 8000232:	440b      	add	r3, r1
 8000234:	681b      	ldr	r3, [r3, #0]
 8000236:	6819      	ldr	r1, [r3, #0]
 8000238:	79bb      	ldrb	r3, [r7, #6]
 800023a:	005b      	lsls	r3, r3, #1
 800023c:	2203      	movs	r2, #3
 800023e:	fa02 f303 	lsl.w	r3, r2, r3
 8000242:	43db      	mvns	r3, r3
 8000244:	461c      	mov	r4, r3
 8000246:	79fa      	ldrb	r2, [r7, #7]
 8000248:	484e      	ldr	r0, [pc, #312]	; (8000384 <GPIO_Init+0x17c>)
 800024a:	4613      	mov	r3, r2
 800024c:	009b      	lsls	r3, r3, #2
 800024e:	4413      	add	r3, r2
 8000250:	00db      	lsls	r3, r3, #3
 8000252:	4403      	add	r3, r0
 8000254:	681b      	ldr	r3, [r3, #0]
 8000256:	ea01 0204 	and.w	r2, r1, r4
 800025a:	601a      	str	r2, [r3, #0]
      *lookuptable[PORT_ID][0] |= PinMode << 2 * PinNum;
 800025c:	79fa      	ldrb	r2, [r7, #7]
 800025e:	4949      	ldr	r1, [pc, #292]	; (8000384 <GPIO_Init+0x17c>)
 8000260:	4613      	mov	r3, r2
 8000262:	009b      	lsls	r3, r3, #2
 8000264:	4413      	add	r3, r2
 8000266:	00db      	lsls	r3, r3, #3
 8000268:	440b      	add	r3, r1
 800026a:	681b      	ldr	r3, [r3, #0]
 800026c:	6819      	ldr	r1, [r3, #0]
 800026e:	797a      	ldrb	r2, [r7, #5]
 8000270:	79bb      	ldrb	r3, [r7, #6]
 8000272:	005b      	lsls	r3, r3, #1
 8000274:	fa02 f303 	lsl.w	r3, r2, r3
 8000278:	461c      	mov	r4, r3
 800027a:	79fa      	ldrb	r2, [r7, #7]
 800027c:	4841      	ldr	r0, [pc, #260]	; (8000384 <GPIO_Init+0x17c>)
 800027e:	4613      	mov	r3, r2
 8000280:	009b      	lsls	r3, r3, #2
 8000282:	4413      	add	r3, r2
 8000284:	00db      	lsls	r3, r3, #3
 8000286:	4403      	add	r3, r0
 8000288:	681b      	ldr	r3, [r3, #0]
 800028a:	ea41 0204 	orr.w	r2, r1, r4
 800028e:	601a      	str	r2, [r3, #0]

      *lookuptable[PORT_ID][1] &= ~(1 << PinNum);
 8000290:	79fa      	ldrb	r2, [r7, #7]
 8000292:	493c      	ldr	r1, [pc, #240]	; (8000384 <GPIO_Init+0x17c>)
 8000294:	4613      	mov	r3, r2
 8000296:	009b      	lsls	r3, r3, #2
 8000298:	4413      	add	r3, r2
 800029a:	00db      	lsls	r3, r3, #3
 800029c:	440b      	add	r3, r1
 800029e:	3304      	adds	r3, #4
 80002a0:	681b      	ldr	r3, [r3, #0]
 80002a2:	6819      	ldr	r1, [r3, #0]
 80002a4:	79bb      	ldrb	r3, [r7, #6]
 80002a6:	2201      	movs	r2, #1
 80002a8:	fa02 f303 	lsl.w	r3, r2, r3
 80002ac:	43db      	mvns	r3, r3
 80002ae:	461c      	mov	r4, r3
 80002b0:	79fa      	ldrb	r2, [r7, #7]
 80002b2:	4834      	ldr	r0, [pc, #208]	; (8000384 <GPIO_Init+0x17c>)
 80002b4:	4613      	mov	r3, r2
 80002b6:	009b      	lsls	r3, r3, #2
 80002b8:	4413      	add	r3, r2
 80002ba:	00db      	lsls	r3, r3, #3
 80002bc:	4403      	add	r3, r0
 80002be:	3304      	adds	r3, #4
 80002c0:	681b      	ldr	r3, [r3, #0]
 80002c2:	ea01 0204 	and.w	r2, r1, r4
 80002c6:	601a      	str	r2, [r3, #0]
      *lookuptable[PORT_ID][1] |= ((DefaultState & _OUTTYPE_MASK) >> _OUTTYPE_SHIFT) << PinNum;
 80002c8:	79fa      	ldrb	r2, [r7, #7]
 80002ca:	492e      	ldr	r1, [pc, #184]	; (8000384 <GPIO_Init+0x17c>)
 80002cc:	4613      	mov	r3, r2
 80002ce:	009b      	lsls	r3, r3, #2
 80002d0:	4413      	add	r3, r2
 80002d2:	00db      	lsls	r3, r3, #3
 80002d4:	440b      	add	r3, r1
 80002d6:	3304      	adds	r3, #4
 80002d8:	681b      	ldr	r3, [r3, #0]
 80002da:	6819      	ldr	r1, [r3, #0]
 80002dc:	793b      	ldrb	r3, [r7, #4]
 80002de:	f003 0201 	and.w	r2, r3, #1
 80002e2:	79bb      	ldrb	r3, [r7, #6]
 80002e4:	fa02 f303 	lsl.w	r3, r2, r3
 80002e8:	461c      	mov	r4, r3
 80002ea:	79fa      	ldrb	r2, [r7, #7]
 80002ec:	4825      	ldr	r0, [pc, #148]	; (8000384 <GPIO_Init+0x17c>)
 80002ee:	4613      	mov	r3, r2
 80002f0:	009b      	lsls	r3, r3, #2
 80002f2:	4413      	add	r3, r2
 80002f4:	00db      	lsls	r3, r3, #3
 80002f6:	4403      	add	r3, r0
 80002f8:	3304      	adds	r3, #4
 80002fa:	681b      	ldr	r3, [r3, #0]
 80002fc:	ea41 0204 	orr.w	r2, r1, r4
 8000300:	601a      	str	r2, [r3, #0]

      *lookuptable[PORT_ID][3] &= ~(0x03 << 2 * PinNum);
 8000302:	79fa      	ldrb	r2, [r7, #7]
 8000304:	491f      	ldr	r1, [pc, #124]	; (8000384 <GPIO_Init+0x17c>)
 8000306:	4613      	mov	r3, r2
 8000308:	009b      	lsls	r3, r3, #2
 800030a:	4413      	add	r3, r2
 800030c:	00db      	lsls	r3, r3, #3
 800030e:	440b      	add	r3, r1
 8000310:	330c      	adds	r3, #12
 8000312:	681b      	ldr	r3, [r3, #0]
 8000314:	6819      	ldr	r1, [r3, #0]
 8000316:	79bb      	ldrb	r3, [r7, #6]
 8000318:	005b      	lsls	r3, r3, #1
 800031a:	2203      	movs	r2, #3
 800031c:	fa02 f303 	lsl.w	r3, r2, r3
 8000320:	43db      	mvns	r3, r3
 8000322:	461c      	mov	r4, r3
 8000324:	79fa      	ldrb	r2, [r7, #7]
 8000326:	4817      	ldr	r0, [pc, #92]	; (8000384 <GPIO_Init+0x17c>)
 8000328:	4613      	mov	r3, r2
 800032a:	009b      	lsls	r3, r3, #2
 800032c:	4413      	add	r3, r2
 800032e:	00db      	lsls	r3, r3, #3
 8000330:	4403      	add	r3, r0
 8000332:	330c      	adds	r3, #12
 8000334:	681b      	ldr	r3, [r3, #0]
 8000336:	ea01 0204 	and.w	r2, r1, r4
 800033a:	601a      	str	r2, [r3, #0]
      *lookuptable[PORT_ID][3] |= ((DefaultState & _PUPD_MASK) >> _PUPD_SHIFT) << (2 * PinNum);
 800033c:	79fa      	ldrb	r2, [r7, #7]
 800033e:	4911      	ldr	r1, [pc, #68]	; (8000384 <GPIO_Init+0x17c>)
 8000340:	4613      	mov	r3, r2
 8000342:	009b      	lsls	r3, r3, #2
 8000344:	4413      	add	r3, r2
 8000346:	00db      	lsls	r3, r3, #3
 8000348:	440b      	add	r3, r1
 800034a:	330c      	adds	r3, #12
 800034c:	681b      	ldr	r3, [r3, #0]
 800034e:	6819      	ldr	r1, [r3, #0]
 8000350:	793b      	ldrb	r3, [r7, #4]
 8000352:	105b      	asrs	r3, r3, #1
 8000354:	f003 0203 	and.w	r2, r3, #3
 8000358:	79bb      	ldrb	r3, [r7, #6]
 800035a:	005b      	lsls	r3, r3, #1
 800035c:	fa02 f303 	lsl.w	r3, r2, r3
 8000360:	461c      	mov	r4, r3
 8000362:	79fa      	ldrb	r2, [r7, #7]
 8000364:	4807      	ldr	r0, [pc, #28]	; (8000384 <GPIO_Init+0x17c>)
 8000366:	4613      	mov	r3, r2
 8000368:	009b      	lsls	r3, r3, #2
 800036a:	4413      	add	r3, r2
 800036c:	00db      	lsls	r3, r3, #3
 800036e:	4403      	add	r3, r0
 8000370:	330c      	adds	r3, #12
 8000372:	681b      	ldr	r3, [r3, #0]
 8000374:	ea41 0204 	orr.w	r2, r1, r4
 8000378:	601a      	str	r2, [r3, #0]
}
 800037a:	bf00      	nop
 800037c:	3708      	adds	r7, #8
 800037e:	46bd      	mov	sp, r7
 8000380:	bc90      	pop	{r4, r7}
 8000382:	4770      	bx	lr
 8000384:	20000000 	.word	0x20000000

08000388 <GPIO_WritePin>:

unsigned char GPIO_WritePin(unsigned char PORT_ID, unsigned char PinNum,
                            unsigned char Data) {
 8000388:	b490      	push	{r4, r7}
 800038a:	b084      	sub	sp, #16
 800038c:	af00      	add	r7, sp, #0
 800038e:	4603      	mov	r3, r0
 8000390:	71fb      	strb	r3, [r7, #7]
 8000392:	460b      	mov	r3, r1
 8000394:	71bb      	strb	r3, [r7, #6]
 8000396:	4613      	mov	r3, r2
 8000398:	717b      	strb	r3, [r7, #5]
  unsigned char result;
      if (((*lookuptable[PORT_ID][0] & (0x03 << 2 * PinNum)) >> (2 * PinNum)) == 1) {
 800039a:	79fa      	ldrb	r2, [r7, #7]
 800039c:	492c      	ldr	r1, [pc, #176]	; (8000450 <GPIO_WritePin+0xc8>)
 800039e:	4613      	mov	r3, r2
 80003a0:	009b      	lsls	r3, r3, #2
 80003a2:	4413      	add	r3, r2
 80003a4:	00db      	lsls	r3, r3, #3
 80003a6:	440b      	add	r3, r1
 80003a8:	681b      	ldr	r3, [r3, #0]
 80003aa:	681b      	ldr	r3, [r3, #0]
 80003ac:	79ba      	ldrb	r2, [r7, #6]
 80003ae:	0052      	lsls	r2, r2, #1
 80003b0:	2103      	movs	r1, #3
 80003b2:	fa01 f202 	lsl.w	r2, r1, r2
 80003b6:	401a      	ands	r2, r3
 80003b8:	79bb      	ldrb	r3, [r7, #6]
 80003ba:	005b      	lsls	r3, r3, #1
 80003bc:	fa22 f303 	lsr.w	r3, r2, r3
 80003c0:	2b01      	cmp	r3, #1
 80003c2:	d13d      	bne.n	8000440 <GPIO_WritePin+0xb8>
        if (Data) {
 80003c4:	797b      	ldrb	r3, [r7, #5]
 80003c6:	2b00      	cmp	r3, #0
 80003c8:	d01b      	beq.n	8000402 <GPIO_WritePin+0x7a>
        	*lookuptable[PORT_ID][5] |= (1 << PinNum);
 80003ca:	79fa      	ldrb	r2, [r7, #7]
 80003cc:	4920      	ldr	r1, [pc, #128]	; (8000450 <GPIO_WritePin+0xc8>)
 80003ce:	4613      	mov	r3, r2
 80003d0:	009b      	lsls	r3, r3, #2
 80003d2:	4413      	add	r3, r2
 80003d4:	00db      	lsls	r3, r3, #3
 80003d6:	440b      	add	r3, r1
 80003d8:	3314      	adds	r3, #20
 80003da:	681b      	ldr	r3, [r3, #0]
 80003dc:	6819      	ldr	r1, [r3, #0]
 80003de:	79bb      	ldrb	r3, [r7, #6]
 80003e0:	2201      	movs	r2, #1
 80003e2:	fa02 f303 	lsl.w	r3, r2, r3
 80003e6:	461c      	mov	r4, r3
 80003e8:	79fa      	ldrb	r2, [r7, #7]
 80003ea:	4819      	ldr	r0, [pc, #100]	; (8000450 <GPIO_WritePin+0xc8>)
 80003ec:	4613      	mov	r3, r2
 80003ee:	009b      	lsls	r3, r3, #2
 80003f0:	4413      	add	r3, r2
 80003f2:	00db      	lsls	r3, r3, #3
 80003f4:	4403      	add	r3, r0
 80003f6:	3314      	adds	r3, #20
 80003f8:	681b      	ldr	r3, [r3, #0]
 80003fa:	ea41 0204 	orr.w	r2, r1, r4
 80003fe:	601a      	str	r2, [r3, #0]
 8000400:	e01b      	b.n	800043a <GPIO_WritePin+0xb2>
        } else {
        	*lookuptable[PORT_ID][5] &= ~(1 << PinNum);
 8000402:	79fa      	ldrb	r2, [r7, #7]
 8000404:	4912      	ldr	r1, [pc, #72]	; (8000450 <GPIO_WritePin+0xc8>)
 8000406:	4613      	mov	r3, r2
 8000408:	009b      	lsls	r3, r3, #2
 800040a:	4413      	add	r3, r2
 800040c:	00db      	lsls	r3, r3, #3
 800040e:	440b      	add	r3, r1
 8000410:	3314      	adds	r3, #20
 8000412:	681b      	ldr	r3, [r3, #0]
 8000414:	6819      	ldr	r1, [r3, #0]
 8000416:	79bb      	ldrb	r3, [r7, #6]
 8000418:	2201      	movs	r2, #1
 800041a:	fa02 f303 	lsl.w	r3, r2, r3
 800041e:	43db      	mvns	r3, r3
 8000420:	461c      	mov	r4, r3
 8000422:	79fa      	ldrb	r2, [r7, #7]
 8000424:	480a      	ldr	r0, [pc, #40]	; (8000450 <GPIO_WritePin+0xc8>)
 8000426:	4613      	mov	r3, r2
 8000428:	009b      	lsls	r3, r3, #2
 800042a:	4413      	add	r3, r2
 800042c:	00db      	lsls	r3, r3, #3
 800042e:	4403      	add	r3, r0
 8000430:	3314      	adds	r3, #20
 8000432:	681b      	ldr	r3, [r3, #0]
 8000434:	ea01 0204 	and.w	r2, r1, r4
 8000438:	601a      	str	r2, [r3, #0]
        }
        result = OK;
 800043a:	2300      	movs	r3, #0
 800043c:	73fb      	strb	r3, [r7, #15]
 800043e:	e001      	b.n	8000444 <GPIO_WritePin+0xbc>
      } else {
        result = NOK;
 8000440:	2301      	movs	r3, #1
 8000442:	73fb      	strb	r3, [r7, #15]
      }

  return result;
 8000444:	7bfb      	ldrb	r3, [r7, #15]
}
 8000446:	4618      	mov	r0, r3
 8000448:	3710      	adds	r7, #16
 800044a:	46bd      	mov	sp, r7
 800044c:	bc90      	pop	{r4, r7}
 800044e:	4770      	bx	lr
 8000450:	20000000 	.word	0x20000000

08000454 <GPIO_ReadPin>:

unsigned char GPIO_ReadPin(unsigned char PORT_ID, unsigned char PinNum) {
 8000454:	b480      	push	{r7}
 8000456:	b085      	sub	sp, #20
 8000458:	af00      	add	r7, sp, #0
 800045a:	4603      	mov	r3, r0
 800045c:	460a      	mov	r2, r1
 800045e:	71fb      	strb	r3, [r7, #7]
 8000460:	4613      	mov	r3, r2
 8000462:	71bb      	strb	r3, [r7, #6]
  unsigned char read = 0;
 8000464:	2300      	movs	r3, #0
 8000466:	73fb      	strb	r3, [r7, #15]

      read = (*lookuptable[PORT_ID][4] & (1 << PinNum)) >> PinNum;
 8000468:	79fa      	ldrb	r2, [r7, #7]
 800046a:	490c      	ldr	r1, [pc, #48]	; (800049c <GPIO_ReadPin+0x48>)
 800046c:	4613      	mov	r3, r2
 800046e:	009b      	lsls	r3, r3, #2
 8000470:	4413      	add	r3, r2
 8000472:	00db      	lsls	r3, r3, #3
 8000474:	440b      	add	r3, r1
 8000476:	3310      	adds	r3, #16
 8000478:	681b      	ldr	r3, [r3, #0]
 800047a:	681b      	ldr	r3, [r3, #0]
 800047c:	79ba      	ldrb	r2, [r7, #6]
 800047e:	2101      	movs	r1, #1
 8000480:	fa01 f202 	lsl.w	r2, r1, r2
 8000484:	401a      	ands	r2, r3
 8000486:	79bb      	ldrb	r3, [r7, #6]
 8000488:	fa22 f303 	lsr.w	r3, r2, r3
 800048c:	73fb      	strb	r3, [r7, #15]

  return read;
 800048e:	7bfb      	ldrb	r3, [r7, #15]
}
 8000490:	4618      	mov	r0, r3
 8000492:	3714      	adds	r7, #20
 8000494:	46bd      	mov	sp, r7
 8000496:	f85d 7b04 	ldr.w	r7, [sp], #4
 800049a:	4770      	bx	lr
 800049c:	20000000 	.word	0x20000000

080004a0 <KeyPad_Init>:
									 6,
									 9,
									 '#'}};

void KeyPad_Init()
{
 80004a0:	b580      	push	{r7, lr}
 80004a2:	b082      	sub	sp, #8
 80004a4:	af00      	add	r7, sp, #0
	 GPIO_EnableClock(1);
 80004a6:	2001      	movs	r0, #1
 80004a8:	f7ff fe94 	bl	80001d4 <GPIO_EnableClock>

	  for (int i = 0; i < 3; i++)
 80004ac:	2300      	movs	r3, #0
 80004ae:	607b      	str	r3, [r7, #4]
 80004b0:	e009      	b.n	80004c6 <KeyPad_Init+0x26>
	  {
	      GPIO_Init(1, i, OUTPUT, PUSH_PULL);
 80004b2:	687b      	ldr	r3, [r7, #4]
 80004b4:	b2d9      	uxtb	r1, r3
 80004b6:	2300      	movs	r3, #0
 80004b8:	2201      	movs	r2, #1
 80004ba:	2001      	movs	r0, #1
 80004bc:	f7ff fea4 	bl	8000208 <GPIO_Init>
	  for (int i = 0; i < 3; i++)
 80004c0:	687b      	ldr	r3, [r7, #4]
 80004c2:	3301      	adds	r3, #1
 80004c4:	607b      	str	r3, [r7, #4]
 80004c6:	687b      	ldr	r3, [r7, #4]
 80004c8:	2b02      	cmp	r3, #2
 80004ca:	ddf2      	ble.n	80004b2 <KeyPad_Init+0x12>
	  }
	  for (int i = 3; i < 7; i++)
 80004cc:	2303      	movs	r3, #3
 80004ce:	603b      	str	r3, [r7, #0]
 80004d0:	e009      	b.n	80004e6 <KeyPad_Init+0x46>
	  {
		  GPIO_Init(1, i, INPUT, PULL_UP);
 80004d2:	683b      	ldr	r3, [r7, #0]
 80004d4:	b2d9      	uxtb	r1, r3
 80004d6:	2302      	movs	r3, #2
 80004d8:	2200      	movs	r2, #0
 80004da:	2001      	movs	r0, #1
 80004dc:	f7ff fe94 	bl	8000208 <GPIO_Init>
	  for (int i = 3; i < 7; i++)
 80004e0:	683b      	ldr	r3, [r7, #0]
 80004e2:	3301      	adds	r3, #1
 80004e4:	603b      	str	r3, [r7, #0]
 80004e6:	683b      	ldr	r3, [r7, #0]
 80004e8:	2b06      	cmp	r3, #6
 80004ea:	ddf2      	ble.n	80004d2 <KeyPad_Init+0x32>
	  }
}
 80004ec:	bf00      	nop
 80004ee:	bf00      	nop
 80004f0:	3708      	adds	r7, #8
 80004f2:	46bd      	mov	sp, r7
 80004f4:	bd80      	pop	{r7, pc}
	...

080004f8 <KeyPad_GetKey>:

unsigned char KeyPad_GetKey()
{
 80004f8:	b480      	push	{r7}
 80004fa:	af00      	add	r7, sp, #0
	if(KeyPadButton == Pressed)
 80004fc:	4b07      	ldr	r3, [pc, #28]	; (800051c <KeyPad_GetKey+0x24>)
 80004fe:	781b      	ldrb	r3, [r3, #0]
 8000500:	2b00      	cmp	r3, #0
 8000502:	d105      	bne.n	8000510 <KeyPad_GetKey+0x18>
	{
		KeyPadButton = Released;
 8000504:	4b05      	ldr	r3, [pc, #20]	; (800051c <KeyPad_GetKey+0x24>)
 8000506:	2201      	movs	r2, #1
 8000508:	701a      	strb	r2, [r3, #0]
	    return Key_Pressed;
 800050a:	4b05      	ldr	r3, [pc, #20]	; (8000520 <KeyPad_GetKey+0x28>)
 800050c:	781b      	ldrb	r3, [r3, #0]
 800050e:	e000      	b.n	8000512 <KeyPad_GetKey+0x1a>
	}
	else
	{
		return 0;
 8000510:	2300      	movs	r3, #0
	}
}
 8000512:	4618      	mov	r0, r3
 8000514:	46bd      	mov	sp, r7
 8000516:	f85d 7b04 	ldr.w	r7, [sp], #4
 800051a:	4770      	bx	lr
 800051c:	20000054 	.word	0x20000054
 8000520:	2000008c 	.word	0x2000008c

08000524 <KeyPad_Manage>:

void KeyPad_Manage()
{
 8000524:	b580      	push	{r7, lr}
 8000526:	b082      	sub	sp, #8
 8000528:	af00      	add	r7, sp, #0
	if(KeyPadButton == Pressed)
 800052a:	4b2b      	ldr	r3, [pc, #172]	; (80005d8 <KeyPad_Manage+0xb4>)
 800052c:	781b      	ldrb	r3, [r3, #0]
 800052e:	2b00      	cmp	r3, #0
 8000530:	d101      	bne.n	8000536 <KeyPad_Manage+0x12>
	{
		KeyPad_CallOut_Button_Pressed_Notification();
 8000532:	f000 f88d 	bl	8000650 <KeyPad_CallOut_Button_Pressed_Notification>
	}

	if(KeyPadButton == Released)
 8000536:	4b28      	ldr	r3, [pc, #160]	; (80005d8 <KeyPad_Manage+0xb4>)
 8000538:	781b      	ldrb	r3, [r3, #0]
 800053a:	2b01      	cmp	r3, #1
 800053c:	d148      	bne.n	80005d0 <KeyPad_Manage+0xac>
	{
		for(int i=0; i < 3; i++)
 800053e:	2300      	movs	r3, #0
 8000540:	607b      	str	r3, [r7, #4]
 8000542:	e042      	b.n	80005ca <KeyPad_Manage+0xa6>
		{
			GPIO_WritePin(1, i, 0);
 8000544:	687b      	ldr	r3, [r7, #4]
 8000546:	b2db      	uxtb	r3, r3
 8000548:	2200      	movs	r2, #0
 800054a:	4619      	mov	r1, r3
 800054c:	2001      	movs	r0, #1
 800054e:	f7ff ff1b 	bl	8000388 <GPIO_WritePin>
			for(int j=0; j < 4; j++)
 8000552:	2300      	movs	r3, #0
 8000554:	603b      	str	r3, [r7, #0]
 8000556:	e02b      	b.n	80005b0 <KeyPad_Manage+0x8c>
			{
				if (GPIO_ReadPin(1, (j+3)) == 0 && !(i == 0 && j == 3) && !(i == 2 && j == 3) && KeyPadButton == Released)
 8000558:	683b      	ldr	r3, [r7, #0]
 800055a:	b2db      	uxtb	r3, r3
 800055c:	3303      	adds	r3, #3
 800055e:	b2db      	uxtb	r3, r3
 8000560:	4619      	mov	r1, r3
 8000562:	2001      	movs	r0, #1
 8000564:	f7ff ff76 	bl	8000454 <GPIO_ReadPin>
 8000568:	4603      	mov	r3, r0
 800056a:	2b00      	cmp	r3, #0
 800056c:	d11d      	bne.n	80005aa <KeyPad_Manage+0x86>
 800056e:	687b      	ldr	r3, [r7, #4]
 8000570:	2b00      	cmp	r3, #0
 8000572:	d102      	bne.n	800057a <KeyPad_Manage+0x56>
 8000574:	683b      	ldr	r3, [r7, #0]
 8000576:	2b03      	cmp	r3, #3
 8000578:	d017      	beq.n	80005aa <KeyPad_Manage+0x86>
 800057a:	687b      	ldr	r3, [r7, #4]
 800057c:	2b02      	cmp	r3, #2
 800057e:	d102      	bne.n	8000586 <KeyPad_Manage+0x62>
 8000580:	683b      	ldr	r3, [r7, #0]
 8000582:	2b03      	cmp	r3, #3
 8000584:	d011      	beq.n	80005aa <KeyPad_Manage+0x86>
 8000586:	4b14      	ldr	r3, [pc, #80]	; (80005d8 <KeyPad_Manage+0xb4>)
 8000588:	781b      	ldrb	r3, [r3, #0]
 800058a:	2b01      	cmp	r3, #1
 800058c:	d10d      	bne.n	80005aa <KeyPad_Manage+0x86>
				{
					Key_Pressed = KeyPad_array[i][j];
 800058e:	4a13      	ldr	r2, [pc, #76]	; (80005dc <KeyPad_Manage+0xb8>)
 8000590:	687b      	ldr	r3, [r7, #4]
 8000592:	009b      	lsls	r3, r3, #2
 8000594:	441a      	add	r2, r3
 8000596:	683b      	ldr	r3, [r7, #0]
 8000598:	4413      	add	r3, r2
 800059a:	781a      	ldrb	r2, [r3, #0]
 800059c:	4b10      	ldr	r3, [pc, #64]	; (80005e0 <KeyPad_Manage+0xbc>)
 800059e:	701a      	strb	r2, [r3, #0]
					KeyPadButton = Pressed;
 80005a0:	4b0d      	ldr	r3, [pc, #52]	; (80005d8 <KeyPad_Manage+0xb4>)
 80005a2:	2200      	movs	r2, #0
 80005a4:	701a      	strb	r2, [r3, #0]
					KeyPad_CallOut_Button_Pressed_Notification();
 80005a6:	f000 f853 	bl	8000650 <KeyPad_CallOut_Button_Pressed_Notification>
			for(int j=0; j < 4; j++)
 80005aa:	683b      	ldr	r3, [r7, #0]
 80005ac:	3301      	adds	r3, #1
 80005ae:	603b      	str	r3, [r7, #0]
 80005b0:	683b      	ldr	r3, [r7, #0]
 80005b2:	2b03      	cmp	r3, #3
 80005b4:	ddd0      	ble.n	8000558 <KeyPad_Manage+0x34>
				}
			 }
			GPIO_WritePin(1, i, 1);
 80005b6:	687b      	ldr	r3, [r7, #4]
 80005b8:	b2db      	uxtb	r3, r3
 80005ba:	2201      	movs	r2, #1
 80005bc:	4619      	mov	r1, r3
 80005be:	2001      	movs	r0, #1
 80005c0:	f7ff fee2 	bl	8000388 <GPIO_WritePin>
		for(int i=0; i < 3; i++)
 80005c4:	687b      	ldr	r3, [r7, #4]
 80005c6:	3301      	adds	r3, #1
 80005c8:	607b      	str	r3, [r7, #4]
 80005ca:	687b      	ldr	r3, [r7, #4]
 80005cc:	2b02      	cmp	r3, #2
 80005ce:	ddb9      	ble.n	8000544 <KeyPad_Manage+0x20>
		 }
	 }

}
 80005d0:	bf00      	nop
 80005d2:	3708      	adds	r7, #8
 80005d4:	46bd      	mov	sp, r7
 80005d6:	bd80      	pop	{r7, pc}
 80005d8:	20000054 	.word	0x20000054
 80005dc:	20000058 	.word	0x20000058
 80005e0:	2000008c 	.word	0x2000008c

080005e4 <main>:
void delay(int secs);
void KeyPad_CallOut_Button_Pressed_Notification();
void Display_Key_On_SevSeg(unsigned char counter);

int main(void)
{
 80005e4:	b580      	push	{r7, lr}
 80005e6:	b082      	sub	sp, #8
 80005e8:	af00      	add	r7, sp, #0
  GPIO_EnableClock(0);
 80005ea:	2000      	movs	r0, #0
 80005ec:	f7ff fdf2 	bl	80001d4 <GPIO_EnableClock>
  for (int i = 0; i < 7; i++) {GPIO_Init(0, i, OUTPUT, PUSH_PULL);}
 80005f0:	2300      	movs	r3, #0
 80005f2:	607b      	str	r3, [r7, #4]
 80005f4:	e009      	b.n	800060a <main+0x26>
 80005f6:	687b      	ldr	r3, [r7, #4]
 80005f8:	b2d9      	uxtb	r1, r3
 80005fa:	2300      	movs	r3, #0
 80005fc:	2201      	movs	r2, #1
 80005fe:	2000      	movs	r0, #0
 8000600:	f7ff fe02 	bl	8000208 <GPIO_Init>
 8000604:	687b      	ldr	r3, [r7, #4]
 8000606:	3301      	adds	r3, #1
 8000608:	607b      	str	r3, [r7, #4]
 800060a:	687b      	ldr	r3, [r7, #4]
 800060c:	2b06      	cmp	r3, #6
 800060e:	ddf2      	ble.n	80005f6 <main+0x12>
  GPIO_Init(0, 7, INPUT, PULL_UP);
 8000610:	2302      	movs	r3, #2
 8000612:	2200      	movs	r2, #0
 8000614:	2107      	movs	r1, #7
 8000616:	2000      	movs	r0, #0
 8000618:	f7ff fdf6 	bl	8000208 <GPIO_Init>
  KeyPad_Init();
 800061c:	f7ff ff40 	bl	80004a0 <KeyPad_Init>

  while (1)
  {
	 KeyPad_Manage();
 8000620:	f7ff ff80 	bl	8000524 <KeyPad_Manage>
 8000624:	e7fc      	b.n	8000620 <main+0x3c>

08000626 <delay>:
  }
  return 0;
}

void delay(int secs)
{
 8000626:	b480      	push	{r7}
 8000628:	b085      	sub	sp, #20
 800062a:	af00      	add	r7, sp, #0
 800062c:	6078      	str	r0, [r7, #4]
    for (int i = 0; i < secs; i++) {}
 800062e:	2300      	movs	r3, #0
 8000630:	60fb      	str	r3, [r7, #12]
 8000632:	e002      	b.n	800063a <delay+0x14>
 8000634:	68fb      	ldr	r3, [r7, #12]
 8000636:	3301      	adds	r3, #1
 8000638:	60fb      	str	r3, [r7, #12]
 800063a:	68fa      	ldr	r2, [r7, #12]
 800063c:	687b      	ldr	r3, [r7, #4]
 800063e:	429a      	cmp	r2, r3
 8000640:	dbf8      	blt.n	8000634 <delay+0xe>
}
 8000642:	bf00      	nop
 8000644:	bf00      	nop
 8000646:	3714      	adds	r7, #20
 8000648:	46bd      	mov	sp, r7
 800064a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800064e:	4770      	bx	lr

08000650 <KeyPad_CallOut_Button_Pressed_Notification>:
void KeyPad_CallOut_Button_Pressed_Notification()
{
 8000650:	b580      	push	{r7, lr}
 8000652:	af00      	add	r7, sp, #0
	counter = KeyPad_GetKey();
 8000654:	f7ff ff50 	bl	80004f8 <KeyPad_GetKey>
 8000658:	4603      	mov	r3, r0
 800065a:	461a      	mov	r2, r3
 800065c:	4b04      	ldr	r3, [pc, #16]	; (8000670 <KeyPad_CallOut_Button_Pressed_Notification+0x20>)
 800065e:	701a      	strb	r2, [r3, #0]
	Display_Key_On_SevSeg(counter);
 8000660:	4b03      	ldr	r3, [pc, #12]	; (8000670 <KeyPad_CallOut_Button_Pressed_Notification+0x20>)
 8000662:	781b      	ldrb	r3, [r3, #0]
 8000664:	4618      	mov	r0, r3
 8000666:	f000 f805 	bl	8000674 <Display_Key_On_SevSeg>
}
 800066a:	bf00      	nop
 800066c:	bd80      	pop	{r7, pc}
 800066e:	bf00      	nop
 8000670:	2000008d 	.word	0x2000008d

08000674 <Display_Key_On_SevSeg>:
void Display_Key_On_SevSeg(unsigned char counter)
{
 8000674:	b580      	push	{r7, lr}
 8000676:	b084      	sub	sp, #16
 8000678:	af00      	add	r7, sp, #0
 800067a:	4603      	mov	r3, r0
 800067c:	71fb      	strb	r3, [r7, #7]
	for (int i = 0; i < 7; i++)
 800067e:	2300      	movs	r3, #0
 8000680:	60fb      	str	r3, [r7, #12]
 8000682:	e016      	b.n	80006b2 <Display_Key_On_SevSeg+0x3e>
    {
		GPIO_WritePin(0, i, (sevenSeg[counter] & (1 << i)) >> i);
 8000684:	68fb      	ldr	r3, [r7, #12]
 8000686:	b2d9      	uxtb	r1, r3
 8000688:	79fb      	ldrb	r3, [r7, #7]
 800068a:	4a0f      	ldr	r2, [pc, #60]	; (80006c8 <Display_Key_On_SevSeg+0x54>)
 800068c:	5cd3      	ldrb	r3, [r2, r3]
 800068e:	4618      	mov	r0, r3
 8000690:	2201      	movs	r2, #1
 8000692:	68fb      	ldr	r3, [r7, #12]
 8000694:	fa02 f303 	lsl.w	r3, r2, r3
 8000698:	ea00 0203 	and.w	r2, r0, r3
 800069c:	68fb      	ldr	r3, [r7, #12]
 800069e:	fa42 f303 	asr.w	r3, r2, r3
 80006a2:	b2db      	uxtb	r3, r3
 80006a4:	461a      	mov	r2, r3
 80006a6:	2000      	movs	r0, #0
 80006a8:	f7ff fe6e 	bl	8000388 <GPIO_WritePin>
	for (int i = 0; i < 7; i++)
 80006ac:	68fb      	ldr	r3, [r7, #12]
 80006ae:	3301      	adds	r3, #1
 80006b0:	60fb      	str	r3, [r7, #12]
 80006b2:	68fb      	ldr	r3, [r7, #12]
 80006b4:	2b06      	cmp	r3, #6
 80006b6:	dde5      	ble.n	8000684 <Display_Key_On_SevSeg+0x10>
    }
	delay(100000);
 80006b8:	4804      	ldr	r0, [pc, #16]	; (80006cc <Display_Key_On_SevSeg+0x58>)
 80006ba:	f7ff ffb4 	bl	8000626 <delay>
}
 80006be:	bf00      	nop
 80006c0:	3710      	adds	r7, #16
 80006c2:	46bd      	mov	sp, r7
 80006c4:	bd80      	pop	{r7, pc}
 80006c6:	bf00      	nop
 80006c8:	20000064 	.word	0x20000064
 80006cc:	000186a0 	.word	0x000186a0

080006d0 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80006d0:	b480      	push	{r7}
 80006d2:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80006d4:	4b06      	ldr	r3, [pc, #24]	; (80006f0 <SystemInit+0x20>)
 80006d6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80006da:	4a05      	ldr	r2, [pc, #20]	; (80006f0 <SystemInit+0x20>)
 80006dc:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80006e0:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80006e4:	bf00      	nop
 80006e6:	46bd      	mov	sp, r7
 80006e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006ec:	4770      	bx	lr
 80006ee:	bf00      	nop
 80006f0:	e000ed00 	.word	0xe000ed00

080006f4 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 80006f4:	f8df d034 	ldr.w	sp, [pc, #52]	; 800072c <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 80006f8:	480d      	ldr	r0, [pc, #52]	; (8000730 <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 80006fa:	490e      	ldr	r1, [pc, #56]	; (8000734 <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 80006fc:	4a0e      	ldr	r2, [pc, #56]	; (8000738 <LoopFillZerobss+0x1e>)
  movs r3, #0
 80006fe:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000700:	e002      	b.n	8000708 <LoopCopyDataInit>

08000702 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000702:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000704:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000706:	3304      	adds	r3, #4

08000708 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000708:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800070a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800070c:	d3f9      	bcc.n	8000702 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800070e:	4a0b      	ldr	r2, [pc, #44]	; (800073c <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 8000710:	4c0b      	ldr	r4, [pc, #44]	; (8000740 <LoopFillZerobss+0x26>)
  movs r3, #0
 8000712:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000714:	e001      	b.n	800071a <LoopFillZerobss>

08000716 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000716:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000718:	3204      	adds	r2, #4

0800071a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800071a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800071c:	d3fb      	bcc.n	8000716 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 800071e:	f7ff ffd7 	bl	80006d0 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000722:	f000 f811 	bl	8000748 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000726:	f7ff ff5d 	bl	80005e4 <main>
  bx  lr    
 800072a:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 800072c:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 8000730:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000734:	20000070 	.word	0x20000070
  ldr r2, =_sidata
 8000738:	080007b0 	.word	0x080007b0
  ldr r2, =_sbss
 800073c:	20000070 	.word	0x20000070
  ldr r4, =_ebss
 8000740:	20000090 	.word	0x20000090

08000744 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000744:	e7fe      	b.n	8000744 <ADC_IRQHandler>
	...

08000748 <__libc_init_array>:
 8000748:	b570      	push	{r4, r5, r6, lr}
 800074a:	4d0d      	ldr	r5, [pc, #52]	; (8000780 <__libc_init_array+0x38>)
 800074c:	4c0d      	ldr	r4, [pc, #52]	; (8000784 <__libc_init_array+0x3c>)
 800074e:	1b64      	subs	r4, r4, r5
 8000750:	10a4      	asrs	r4, r4, #2
 8000752:	2600      	movs	r6, #0
 8000754:	42a6      	cmp	r6, r4
 8000756:	d109      	bne.n	800076c <__libc_init_array+0x24>
 8000758:	4d0b      	ldr	r5, [pc, #44]	; (8000788 <__libc_init_array+0x40>)
 800075a:	4c0c      	ldr	r4, [pc, #48]	; (800078c <__libc_init_array+0x44>)
 800075c:	f000 f818 	bl	8000790 <_init>
 8000760:	1b64      	subs	r4, r4, r5
 8000762:	10a4      	asrs	r4, r4, #2
 8000764:	2600      	movs	r6, #0
 8000766:	42a6      	cmp	r6, r4
 8000768:	d105      	bne.n	8000776 <__libc_init_array+0x2e>
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000770:	4798      	blx	r3
 8000772:	3601      	adds	r6, #1
 8000774:	e7ee      	b.n	8000754 <__libc_init_array+0xc>
 8000776:	f855 3b04 	ldr.w	r3, [r5], #4
 800077a:	4798      	blx	r3
 800077c:	3601      	adds	r6, #1
 800077e:	e7f2      	b.n	8000766 <__libc_init_array+0x1e>
 8000780:	080007a8 	.word	0x080007a8
 8000784:	080007a8 	.word	0x080007a8
 8000788:	080007a8 	.word	0x080007a8
 800078c:	080007ac 	.word	0x080007ac

08000790 <_init>:
 8000790:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000792:	bf00      	nop
 8000794:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000796:	bc08      	pop	{r3}
 8000798:	469e      	mov	lr, r3
 800079a:	4770      	bx	lr

0800079c <_fini>:
 800079c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800079e:	bf00      	nop
 80007a0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80007a2:	bc08      	pop	{r3}
 80007a4:	469e      	mov	lr, r3
 80007a6:	4770      	bx	lr
